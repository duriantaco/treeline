{"nodes": [{"id": 0, "name": "treeline.utils.__init__", "type": "module", "is_entry": true, "metrics": {"functions": 0, "classes": 0, "complexity": 0}, "code_smells": []}, {"id": 1, "name": "tests.test_integration", "type": "module", "is_entry": true, "metrics": {"functions": 3, "classes": 0, "complexity": 50}, "code_smells": ["[code_smells] Magic number detected (Line 108)", "[code_smells] Magic number detected (Line 238)", "[code_smells] Magic number detected (Line 292)", "[code_smells] Magic number detected (Line 204)", "[code_smells] Magic number detected (Line 265)", "[code_smells] Magic number detected (Line 282)", "[code_smells] Magic number detected (Line 294)", "[code_smells] Magic number detected (Line 320)", "[code_smells] Magic number detected (Line 327)", "[code_smells] Magic number detected (Line 334)", "[code_smells] Magic number detected (Line 343)", "[code_smells] Magic number detected (Line 202)", "[code_smells] Magic number detected (Line 280)", "[code_smells] Magic number detected (Line 318)", "[code_smells] Magic number detected (Line 325)", "[code_smells] Magic number detected (Line 332)", "[code_smells] Magic number detected (Line 339)", "[code_smells] Magic number detected (Line 386)", "[code_smells] Magic number detected (Line 395)", "[code_smells] Magic number detected (Line 407)", "[code_smells] Magic number detected (Line 249)", "[code_smells] Magic number detected (Line 260)", "[code_smells] Magic number detected (Line 404)", "[code_smells] Magic number detected (Line 243)", "[code_smells] Magic number detected (Line 382)", "[code_smells] Magic number detected (Line 391)", "[code_smells] Magic number detected (Line 321)", "[code_smells] Magic number detected (Line 328)", "[code_smells] Magic number detected (Line 335)", "[code_smells] Magic number detected (Line 357)", "[code_smells] Magic number detected (Line 362)", "[code_smells] Magic number detected (Line 367)", "[code_smells] Magic number detected (Line 387)", "[code_smells] Magic number detected (Line 396)", "[code_smells] Magic number detected (Line 250)", "[code_smells] Magic number detected (Line 385)", "[code_smells] Magic number detected (Line 394)", "[security] Possible hardcoded credential (Line 72)", "[style] Line is too long (Line 96)", "[style] Line is too long (Line 104)", "[style] Line is too long (Line 242)", "[style] Line is too long (Line 250)", "[style] Line is too long (Line 262)", "[style] Line is too long (Line 266)", "[style] Line is too long (Line 268)", "[style] Line is too long (Line 284)", "[style] Line is too long (Line 302)", "[style] Line is too long (Line 304)", "[style] Line is too long (Line 306)", "[style] Line is too long (Line 328)", "[style] Line is too long (Line 374)", "[style] Line is too long (Line 375)", "[style] Line is too long (Line 383)", "[style] Line is too long (Line 392)", "[style] Line is too long (Line 406)", "[complexity] High cyclomatic complexity (11 > 10) (Line 200)", "[complexity] High cognitive complexity (20 > 15) (Line 200)", "[complexity] High cyclomatic complexity (37 > 10) (Line 278)", "[complexity] High cognitive complexity (69 > 15) (Line 278)", "[duplication] Duplicated code block detected (Line 60)", "[duplication] Duplicated code block detected (Line 65)", "[duplication] Duplicated code block detected (Line 246)", "[duplication] Duplicated code block detected (Line 398)"]}, {"id": 2, "name": "treeline.checkers.sql_injection", "type": "module", "is_entry": false, "metrics": {"functions": 2, "classes": 1, "complexity": 9}, "code_smells": ["[style] Line is too long (Line 10)", "[style] Line is too long (Line 15)", "[duplication] Duplicated code block detected (Line 1)", "[duplication] Duplicated code block detected (Line 2)", "[duplication] Duplicated code block detected (Line 3)", "[duplication] Duplicated code block detected (Line 4)", "[duplication] Duplicated code block detected (Line 7)", "[duplication] Duplicated code block detected (Line 8)", "[duplication] Duplicated code block detected (Line 11)"]}, {"id": 3, "name": "tests.do_not_use.super_long_code", "type": "module", "is_entry": true, "metrics": {"functions": 2, "classes": 0, "complexity": 2}, "code_smells": ["[code_smells] Magic number detected (Line 9)", "[style] Line is too long (Line 1)", "[style] Line is too long (Line 9)"]}, {"id": 4, "name": "treeline.models.analyzer", "type": "module", "is_entry": false, "metrics": {"functions": 0, "classes": 5, "complexity": 0}, "code_smells": ["[code_smells] Magic number detected (Line 42)", "[code_smells] Magic number detected (Line 43)", "[duplication] Duplicated code block detected (Line 7)", "[duplication] Duplicated code block detected (Line 13)", "[duplication] Duplicated code block detected (Line 22)", "[duplication] Duplicated code block detected (Line 31)", "[duplication] Duplicated code block detected (Line 33)", "[duplication] Duplicated code block detected (Line 40)"]}, {"id": 5, "name": "treeline.optimization.graph", "type": "module", "is_entry": true, "metrics": {"functions": 9, "classes": 1, "complexity": 36}, "code_smells": ["[code_smells] Magic number detected (Line 12)", "[code_smells] Magic number detected (Line 54)", "[code_smells] Magic number detected (Line 22)", "[code_smells] Magic number detected (Line 47)", "[code_smells] Magic number detected (Line 65)", "[code_smells] Magic number detected (Line 78)", "[style] Line is too long (Line 26)", "[complexity] High cyclomatic complexity (19 > 10) (Line 5)", "[complexity] High cognitive complexity (27 > 15) (Line 5)", "[duplication] Duplicated code block detected (Line 1)"]}, {"id": 6, "name": "treeline.analyzer", "type": "module", "is_entry": true, "metrics": {"functions": 6, "classes": 1, "complexity": 34}, "code_smells": ["[code_smells] Magic number detected (Line 23)", "[style] Line is too long (Line 11)", "[style] Line is too long (Line 31)", "[style] Line is too long (Line 45)", "[style] Line is too long (Line 170)", "[style] Line is too long (Line 184)", "[style] Line is too long (Line 190)", "[style] Line is too long (Line 193)", "[style] Line is too long (Line 194)", "[complexity] High cyclomatic complexity (29 > 10) (Line 10)", "[complexity] High cognitive complexity (47 > 15) (Line 10)", "[complexity] High cyclomatic complexity (12 > 10) (Line 28)", "[complexity] High cognitive complexity (24 > 15) (Line 28)", "[duplication] Duplicated code block detected (Line 3)", "[duplication] Duplicated code block detected (Line 92)", "[duplication] Duplicated code block detected (Line 102)", "[duplication] Duplicated code block detected (Line 117)", "[duplication] Duplicated code block detected (Line 183)", "[duplication] Duplicated code block detected (Line 189)", "[duplication] Duplicated code block detected (Line 202)", "[duplication] Duplicated code block detected (Line 206)", "[duplication] Duplicated code block detected (Line 213)"]}, {"id": 7, "name": "treeline.checkers.magic_numbers", "type": "module", "is_entry": false, "metrics": {"functions": 3, "classes": 1, "complexity": 14}, "code_smells": ["[code_smells] Magic number detected (Line 13)", "[code_smells] Magic number detected (Line 16)", "[style] Line is too long (Line 10)", "[style] Line is too long (Line 12)", "[style] Line is too long (Line 16)", "[complexity] High cyclomatic complexity (12 > 10) (Line 6)", "[complexity] High cognitive complexity (19 > 15) (Line 6)", "[duplication] Duplicated code block detected (Line 1)", "[duplication] Duplicated code block detected (Line 2)", "[duplication] Duplicated code block detected (Line 3)", "[duplication] Duplicated code block detected (Line 17)"]}, {"id": 8, "name": "treeline.models.enhanced_analyzer", "type": "module", "is_entry": false, "metrics": {"functions": 0, "classes": 4, "complexity": 0}, "code_smells": ["[duplication] Duplicated code block detected (Line 7)", "[duplication] Duplicated code block detected (Line 21)", "[duplication] Duplicated code block detected (Line 34)", "[duplication] Duplicated code block detected (Line 40)"]}, {"id": 9, "name": "treeline.checkers.code_smells", "type": "module", "is_entry": false, "metrics": {"functions": 4, "classes": 1, "complexity": 11}, "code_smells": ["[code_smells] Magic number detected (Line 11)", "[style] Line is too long (Line 13)", "[style] Line is too long (Line 17)", "[style] Line is too long (Line 19)", "[style] Line is too long (Line 26)", "[style] Line is too long (Line 28)", "[style] Line is too long (Line 30)", "[duplication] Duplicated code block detected (Line 1)", "[duplication] Duplicated code block detected (Line 2)", "[duplication] Duplicated code block detected (Line 3)", "[duplication] Duplicated code block detected (Line 9)", "[duplication] Duplicated code block detected (Line 10)", "[duplication] Duplicated code block detected (Line 18)", "[duplication] Duplicated code block detected (Line 27)"]}, {"id": 10, "name": "treeline.checkers.duplication", "type": "module", "is_entry": false, "metrics": {"functions": 2, "classes": 1, "complexity": 9}, "code_smells": ["[code_smells] Magic number detected (Line 11)", "[code_smells] Magic number detected (Line 31)", "[code_smells] Magic number detected (Line 28)", "[style] Line is too long (Line 24)", "[style] Line is too long (Line 31)", "[duplication] Duplicated code block detected (Line 1)", "[duplication] Duplicated code block detected (Line 2)", "[duplication] Duplicated code block detected (Line 3)", "[duplication] Duplicated code block detected (Line 30)"]}, {"id": 11, "name": "tests.do_not_use.test_problematic_code", "type": "module", "is_entry": true, "metrics": {"functions": 37, "classes": 1, "complexity": 66}, "code_smells": ["[code_smells] Magic number detected (Line 24)", "[code_smells] Magic number detected (Line 28)", "[code_smells] Magic number detected (Line 49)", "[code_smells] Magic number detected (Line 180)", "[code_smells] Magic number detected (Line 208)", "[code_smells] Magic number detected (Line 236)", "[code_smells] Magic number detected (Line 31)", "[code_smells] Magic number detected (Line 48)", "[code_smells] Magic number detected (Line 157)", "[code_smells] Magic number detected (Line 179)", "[code_smells] Magic number detected (Line 185)", "[code_smells] Magic number detected (Line 207)", "[code_smells] Magic number detected (Line 213)", "[code_smells] Magic number detected (Line 235)", "[code_smells] Magic number detected (Line 21)", "[code_smells] Magic number detected (Line 32)", "[code_smells] Magic number detected (Line 34)", "[code_smells] Magic number detected (Line 73)", "[code_smells] Magic number detected (Line 60)", "[code_smells] Magic number detected (Line 81)", "[code_smells] Magic number detected (Line 96)", "[code_smells] Magic number detected (Line 99)", "[code_smells] Magic number detected (Line 84)", "[code_smells] Magic number detected (Line 93)", "[code_smells] Magic number detected (Line 102)", "[code_smells] Magic number detected (Line 109)", "[code_smells] Magic number detected (Line 83)", "[code_smells] Magic number detected (Line 94)", "[code_smells] Magic number detected (Line 100)", "[code_smells] Magic number detected (Line 103)", "[code_smells] Magic number detected (Line 105)", "[code_smells] Magic number detected (Line 110)", "[code_smells] Magic number detected (Line 112)", "[code_smells] Magic number detected (Line 115)", "[code_smells] Function has too many parameters (>5) (Line 122)", "[security] Possible hardcoded credential (Line 39)", "[security] Possible hardcoded credential (Line 42)", "[style] Line is too long (Line 60)", "[style] Line is too long (Line 66)", "[style] Line is too long (Line 83)", "[style] Line is too long (Line 94)", "[style] Line is too long (Line 97)", "[style] Line is too long (Line 100)", "[style] Line is too long (Line 103)", "[style] Line is too long (Line 105)", "[style] Line is too long (Line 110)", "[style] Line is too long (Line 112)", "[style] Line is too long (Line 115)", "[style] Line is too long (Line 117)", "[style] Line is too long (Line 279)", "[complexity] High cyclomatic complexity (21 > 10) (Line 71)", "[complexity] High cognitive complexity (116 > 15) (Line 71)", "[duplication] Duplicated code block detected (Line 11)", "[duplication] Duplicated code block detected (Line 14)", "[duplication] Duplicated code block detected (Line 95)", "[duplication] Duplicated code block detected (Line 101)", "[duplication] Duplicated code block detected (Line 111)", "[duplication] Duplicated code block detected (Line 113)", "[duplication] Duplicated code block detected (Line 116)", "[duplication] Duplicated code block detected (Line 278)"]}, {"id": 12, "name": "treeline.checkers.security", "type": "module", "is_entry": false, "metrics": {"functions": 3, "classes": 1, "complexity": 7}, "code_smells": ["[security] Possible hardcoded credential (Line 17)", "[style] Line is too long (Line 12)", "[style] Line is too long (Line 15)", "[style] Line is too long (Line 17)", "[duplication] Duplicated code block detected (Line 1)", "[duplication] Duplicated code block detected (Line 2)", "[duplication] Duplicated code block detected (Line 3)", "[duplication] Duplicated code block detected (Line 10)", "[duplication] Duplicated code block detected (Line 16)"]}, {"id": 13, "name": "treeline.api.__init__", "type": "module", "is_entry": true, "metrics": {"functions": 0, "classes": 0, "complexity": 0}, "code_smells": []}, {"id": 14, "name": "tests.test_nested_dir", "type": "module", "is_entry": true, "metrics": {"functions": 3, "classes": 1, "complexity": 4}, "code_smells": ["[code_smells] Magic number detected (Line 12)", "[duplication] Duplicated code block detected (Line 1)", "[duplication] Duplicated code block detected (Line 34)"]}, {"id": 15, "name": "tests.test_checkers", "type": "module", "is_entry": true, "metrics": {"functions": 3, "classes": 0, "complexity": 12}, "code_smells": ["[code_smells] Magic number detected (Line 94)", "[code_smells] Magic number detected (Line 113)", "[code_smells] Magic number detected (Line 135)", "[code_smells] Magic number detected (Line 218)", "[code_smells] Magic number detected (Line 247)", "[code_smells] Magic number detected (Line 251)", "[code_smells] Magic number detected (Line 23)", "[code_smells] Magic number detected (Line 46)", "[code_smells] Magic number detected (Line 249)", "[code_smells] Magic number detected (Line 29)", "[code_smells] Magic number detected (Line 31)", "[code_smells] Magic number detected (Line 58)", "[code_smells] Magic number detected (Line 60)", "[security] Possible hardcoded credential (Line 97)", "[style] Line is too long (Line 27)", "[style] Line is too long (Line 58)", "[style] Line is too long (Line 63)", "[style] Line is too long (Line 65)", "[style] Line is too long (Line 66)", "[style] Line is too long (Line 67)", "[style] Line is too long (Line 94)", "[style] Line is too long (Line 110)", "[style] Line is too long (Line 113)", "[style] Line is too long (Line 135)", "[style] Line is too long (Line 155)", "[style] Line is too long (Line 159)", "[style] Line is too long (Line 196)", "[style] Line is too long (Line 203)", "[style] Line is too long (Line 218)", "[style] Line is too long (Line 247)", "[duplication] Duplicated code block detected (Line 246)"]}, {"id": 16, "name": "treeline.core", "type": "module", "is_entry": false, "metrics": {"functions": 4, "classes": 0, "complexity": 33}, "code_smells": ["[code_smells] Magic number detected (Line 101)", "[code_smells] Magic number detected (Line 124)", "[code_smells] Magic number detected (Line 188)", "[code_smells] Magic number detected (Line 223)", "[code_smells] Magic number detected (Line 120)", "[code_smells] Magic number detected (Line 71)", "[code_smells] Magic number detected (Line 79)", "[code_smells] Magic number detected (Line 87)", "[code_smells] Magic number detected (Line 125)", "[code_smells] Magic number detected (Line 136)", "[code_smells] Magic number detected (Line 232)", "[code_smells] Magic number detected (Line 143)", "[code_smells] Magic number detected (Line 147)", "[code_smells] Magic number detected (Line 149)", "[style] Line is too long (Line 38)", "[style] Line is too long (Line 75)", "[style] Line is too long (Line 83)", "[style] Line is too long (Line 91)", "[style] Line is too long (Line 101)", "[style] Line is too long (Line 114)", "[style] Line is too long (Line 131)", "[style] Line is too long (Line 134)", "[style] Line is too long (Line 139)", "[style] Line is too long (Line 173)", "[style] Line is too long (Line 195)", "[style] Line is too long (Line 211)", "[style] Line is too long (Line 223)", "[style] Line is too long (Line 232)", "[complexity] High cyclomatic complexity (13 > 10) (Line 38)", "[complexity] High cognitive complexity (28 > 15) (Line 38)", "[complexity] High cyclomatic complexity (15 > 10) (Line 101)", "[complexity] High cognitive complexity (26 > 15) (Line 101)", "[duplication] Duplicated code block detected (Line 3)", "[duplication] Duplicated code block detected (Line 5)", "[duplication] Duplicated code block detected (Line 34)", "[duplication] Duplicated code block detected (Line 39)", "[duplication] Duplicated code block detected (Line 48)", "[duplication] Duplicated code block detected (Line 76)", "[duplication] Duplicated code block detected (Line 84)", "[duplication] Duplicated code block detected (Line 92)", "[duplication] Duplicated code block detected (Line 138)", "[duplication] Duplicated code block detected (Line 148)", "[duplication] Duplicated code block detected (Line 150)", "[duplication] Duplicated code block detected (Line 196)", "[duplication] Duplicated code block detected (Line 201)", "[duplication] Duplicated code block detected (Line 204)", "[duplication] Duplicated code block detected (Line 207)", "[duplication] Duplicated code block detected (Line 212)", "[duplication] Duplicated code block detected (Line 230)", "[duplication] Duplicated code block detected (Line 233)"]}, {"id": 17, "name": "treeline.__init__", "type": "module", "is_entry": true, "metrics": {"functions": 0, "classes": 0, "complexity": 0}, "code_smells": []}, {"id": 18, "name": "treeline.utils.report", "type": "module", "is_entry": false, "metrics": {"functions": 5, "classes": 1, "complexity": 40}, "code_smells": ["[code_smells] Magic number detected (Line 26)", "[code_smells] Magic number detected (Line 214)", "[code_smells] Magic number detected (Line 77)", "[code_smells] Magic number detected (Line 212)", "[code_smells] Magic number detected (Line 10)", "[code_smells] Magic number detected (Line 133)", "[code_smells] Magic number detected (Line 167)", "[code_smells] Magic number detected (Line 130)", "[code_smells] Magic number detected (Line 145)", "[code_smells] Magic number detected (Line 129)", "[code_smells] Magic number detected (Line 144)", "[code_smells] Magic number detected (Line 162)", "[code_smells] Magic number detected (Line 90)", "[code_smells] Magic number detected (Line 158)", "[code_smells] Magic number detected (Line 128)", "[code_smells] Magic number detected (Line 134)", "[code_smells] Magic number detected (Line 168)", "[code_smells] Magic number detected (Line 143)", "[code_smells] Magic number detected (Line 163)", "[style] Line is too long (Line 42)", "[style] Line is too long (Line 50)", "[style] Line is too long (Line 64)", "[style] Line is too long (Line 70)", "[style] Line is too long (Line 101)", "[style] Line is too long (Line 105)", "[style] Line is too long (Line 112)", "[style] Line is too long (Line 116)", "[style] Line is too long (Line 124)", "[style] Line is too long (Line 134)", "[style] Line is too long (Line 148)", "[style] Line is too long (Line 156)", "[style] Line is too long (Line 159)", "[style] Line is too long (Line 163)", "[style] Line is too long (Line 168)", "[style] Line is too long (Line 178)", "[style] Line is too long (Line 211)", "[complexity] High cyclomatic complexity (36 > 10) (Line 6)", "[complexity] High cognitive complexity (67 > 15) (Line 6)", "[complexity] High cyclomatic complexity (26 > 10) (Line 66)", "[complexity] High cognitive complexity (54 > 15) (Line 66)", "[duplication] Duplicated code block detected (Line 1)", "[duplication] Duplicated code block detected (Line 3)", "[duplication] Duplicated code block detected (Line 36)", "[duplication] Duplicated code block detected (Line 38)", "[duplication] Duplicated code block detected (Line 62)", "[duplication] Duplicated code block detected (Line 82)", "[duplication] Duplicated code block detected (Line 135)", "[duplication] Duplicated code block detected (Line 169)", "[duplication] Duplicated code block detected (Line 179)", "[duplication] Duplicated code block detected (Line 187)", "[duplication] Duplicated code block detected (Line 214)"]}, {"id": 19, "name": "treeline.__main__", "type": "module", "is_entry": true, "metrics": {"functions": 0, "classes": 0, "complexity": 0}, "code_smells": []}, {"id": 20, "name": "treeline.dependency_analyzer", "type": "module", "is_entry": false, "metrics": {"functions": 13, "classes": 1, "complexity": 103}, "code_smells": ["[code_smells] Magic number detected (Line 176)", "[code_smells] Magic number detected (Line 203)", "[code_smells] Magic number detected (Line 76)", "[code_smells] Magic number detected (Line 38)", "[code_smells] Magic number detected (Line 39)", "[code_smells] Magic number detected (Line 40)", "[code_smells] Magic number detected (Line 41)", "[code_smells] Magic number detected (Line 42)", "[code_smells] Magic number detected (Line 43)", "[code_smells] Magic number detected (Line 44)", "[code_smells] Magic number detected (Line 45)", "[code_smells] Magic number detected (Line 46)", "[code_smells] Magic number detected (Line 47)", "[code_smells] Magic number detected (Line 48)", "[code_smells] Magic number detected (Line 49)", "[code_smells] Magic number detected (Line 50)", "[code_smells] Magic number detected (Line 51)", "[code_smells] Magic number detected (Line 52)", "[code_smells] Magic number detected (Line 53)", "[code_smells] Magic number detected (Line 54)", "[code_smells] Magic number detected (Line 55)", "[code_smells] Magic number detected (Line 56)", "[code_smells] Magic number detected (Line 57)", "[code_smells] Magic number detected (Line 75)", "[code_smells] Magic number detected (Line 206)", "[code_smells] Magic number detected (Line 372)", "[code_smells] Magic number detected (Line 439)", "[code_smells] Magic number detected (Line 443)", "[code_smells] Magic number detected (Line 450)", "[code_smells] Magic number detected (Line 451)", "[code_smells] Magic number detected (Line 452)", "[code_smells] Magic number detected (Line 30)", "[code_smells] Magic number detected (Line 31)", "[code_smells] Magic number detected (Line 32)", "[code_smells] Magic number detected (Line 33)", "[code_smells] Magic number detected (Line 34)", "[code_smells] Magic number detected (Line 362)", "[code_smells] Magic number detected (Line 366)", "[code_smells] Magic number detected (Line 208)", "[style] Line is too long (Line 40)", "[style] Line is too long (Line 41)", "[style] Line is too long (Line 46)", "[style] Line is too long (Line 47)", "[style] Line is too long (Line 48)", "[style] Line is too long (Line 50)", "[style] Line is too long (Line 51)", "[style] Line is too long (Line 52)", "[style] Line is too long (Line 54)", "[style] Line is too long (Line 56)", "[style] Line is too long (Line 181)", "[style] Line is too long (Line 183)", "[style] Line is too long (Line 198)", "[style] Line is too long (Line 205)", "[style] Line is too long (Line 316)", "[style] Line is too long (Line 354)", "[style] Line is too long (Line 362)", "[style] Line is too long (Line 372)", "[style] Line is too long (Line 378)", "[style] Line is too long (Line 379)", "[style] Line is too long (Line 386)", "[style] Line is too long (Line 393)", "[style] Line is too long (Line 413)", "[style] Line is too long (Line 419)", "[style] Line is too long (Line 423)", "[style] Line is too long (Line 429)", "[style] Line is too long (Line 432)", "[complexity] High cyclomatic complexity (90 > 10) (Line 16)", "[complexity] High cognitive complexity (247 > 15) (Line 16)", "[complexity] High cyclomatic complexity (15 > 10) (Line 112)", "[complexity] High cognitive complexity (45 > 15) (Line 112)", "[complexity] High cyclomatic complexity (17 > 10) (Line 211)", "[complexity] High cognitive complexity (31 > 15) (Line 211)", "[complexity] High cyclomatic complexity (30 > 10) (Line 375)", "[complexity] High cognitive complexity (119 > 15) (Line 375)", "[duplication] Duplicated code block detected (Line 4)", "[duplication] Duplicated code block detected (Line 65)", "[duplication] Duplicated code block detected (Line 294)", "[duplication] Duplicated code block detected (Line 335)", "[duplication] Duplicated code block detected (Line 431)", "[duplication] Duplicated code block detected (Line 466)"]}, {"id": 21, "name": "treeline.ignore", "type": "module", "is_entry": false, "metrics": {"functions": 2, "classes": 0, "complexity": 16}, "code_smells": ["[code_smells] Magic number detected (Line 41)", "[code_smells] Magic number detected (Line 25)", "[code_smells] Magic number detected (Line 28)", "[code_smells] Magic number detected (Line 34)", "[code_smells] Magic number detected (Line 39)", "[code_smells] Magic number detected (Line 37)", "[style] Line is too long (Line 12)", "[style] Line is too long (Line 27)", "[complexity] High cyclomatic complexity (13 > 10) (Line 17)", "[duplication] Duplicated code block detected (Line 1)", "[duplication] Duplicated code block detected (Line 2)", "[duplication] Duplicated code block detected (Line 25)", "[duplication] Duplicated code block detected (Line 28)", "[duplication] Duplicated code block detected (Line 41)"]}, {"id": 22, "name": "tests.test_empty_dir", "type": "module", "is_entry": true, "metrics": {"functions": 3, "classes": 1, "complexity": 4}, "code_smells": ["[code_smells] Magic number detected (Line 24)", "[code_smells] Magic number detected (Line 12)"]}, {"id": 23, "name": "treeline.checkers.style_checker", "type": "module", "is_entry": false, "metrics": {"functions": 2, "classes": 1, "complexity": 6}, "code_smells": ["[code_smells] Magic number detected (Line 9)", "[code_smells] Magic number detected (Line 10)", "[code_smells] Magic number detected (Line 21)", "[style] Line is too long (Line 17)", "[duplication] Duplicated code block detected (Line 1)", "[duplication] Duplicated code block detected (Line 2)", "[duplication] Duplicated code block detected (Line 3)", "[duplication] Duplicated code block detected (Line 4)", "[duplication] Duplicated code block detected (Line 7)", "[duplication] Duplicated code block detected (Line 8)"]}, {"id": 24, "name": "treeline.enhanced_analyzer", "type": "module", "is_entry": false, "metrics": {"functions": 13, "classes": 1, "complexity": 59}, "code_smells": ["[code_smells] Magic number detected (Line 16)", "[code_smells] Magic number detected (Line 234)", "[code_smells] Magic number detected (Line 237)", "[code_smells] Magic number detected (Line 118)", "[code_smells] Magic number detected (Line 195)", "[code_smells] Magic number detected (Line 215)", "[code_smells] Magic number detected (Line 187)", "[code_smells] Magic number detected (Line 239)", "[style] Line is too long (Line 41)", "[style] Line is too long (Line 46)", "[style] Line is too long (Line 51)", "[style] Line is too long (Line 56)", "[style] Line is too long (Line 61)", "[style] Line is too long (Line 83)", "[style] Line is too long (Line 90)", "[style] Line is too long (Line 119)", "[style] Line is too long (Line 129)", "[style] Line is too long (Line 137)", "[style] Line is too long (Line 156)", "[style] Line is too long (Line 157)", "[style] Line is too long (Line 160)", "[style] Line is too long (Line 166)", "[style] Line is too long (Line 171)", "[style] Line is too long (Line 176)", "[style] Line is too long (Line 236)", "[complexity] High cyclomatic complexity (47 > 10) (Line 15)", "[complexity] High cognitive complexity (65 > 15) (Line 15)", "[complexity] High cyclomatic complexity (12 > 10) (Line 29)", "[complexity] High cyclomatic complexity (16 > 10) (Line 83)", "[complexity] High cognitive complexity (29 > 15) (Line 83)", "[duplication] Duplicated code block detected (Line 3)", "[duplication] Duplicated code block detected (Line 55)", "[duplication] Duplicated code block detected (Line 60)", "[duplication] Duplicated code block detected (Line 62)", "[duplication] Duplicated code block detected (Line 65)", "[duplication] Duplicated code block detected (Line 67)", "[duplication] Duplicated code block detected (Line 212)", "[duplication] Duplicated code block detected (Line 230)"]}, {"id": 25, "name": "treeline.models.core", "type": "module", "is_entry": false, "metrics": {"functions": 0, "classes": 3, "complexity": 0}, "code_smells": ["[code_smells] Magic number detected (Line 20)", "[code_smells] Magic number detected (Line 21)", "[code_smells] Magic number detected (Line 22)", "[code_smells] Magic number detected (Line 23)", "[duplication] Duplicated code block detected (Line 1)", "[duplication] Duplicated code block detected (Line 2)", "[duplication] Duplicated code block detected (Line 8)", "[duplication] Duplicated code block detected (Line 11)", "[duplication] Duplicated code block detected (Line 17)", "[duplication] Duplicated code block detected (Line 26)"]}, {"id": 26, "name": "docs.conf", "type": "module", "is_entry": true, "metrics": {"functions": 0, "classes": 0, "complexity": 0}, "code_smells": []}, {"id": 27, "name": "treeline.optimization.indexer", "type": "module", "is_entry": false, "metrics": {"functions": 9, "classes": 2, "complexity": 44}, "code_smells": ["[code_smells] Magic number detected (Line 28)", "[code_smells] Magic number detected (Line 61)", "[code_smells] Magic number detected (Line 63)", "[code_smells] Magic number detected (Line 127)", "[code_smells] Magic number detected (Line 168)", "[code_smells] Magic number detected (Line 199)", "[code_smells] Magic number detected (Line 201)", "[code_smells] Magic number detected (Line 212)", "[code_smells] Magic number detected (Line 214)", "[code_smells] Magic number detected (Line 204)", "[code_smells] Magic number detected (Line 217)", "[code_smells] Magic number detected (Line 139)", "[code_smells] Magic number detected (Line 147)", "[code_smells] Magic number detected (Line 178)", "[code_smells] Magic number detected (Line 193)", "[code_smells] Magic number detected (Line 53)", "[code_smells] Magic number detected (Line 76)", "[code_smells] Magic number detected (Line 209)", "[code_smells] Magic number detected (Line 222)", "[code_smells] Magic number detected (Line 103)", "[code_smells] Magic number detected (Line 108)", "[style] Line is too long (Line 166)", "[style] Line is too long (Line 200)", "[complexity] High cyclomatic complexity (36 > 10) (Line 27)", "[complexity] High cognitive complexity (62 > 15) (Line 27)", "[complexity] High cognitive complexity (27 > 15) (Line 71)", "[complexity] High cyclomatic complexity (13 > 10) (Line 116)", "[complexity] High cognitive complexity (16 > 15) (Line 116)", "[duplication] Duplicated code block detected (Line 2)", "[duplication] Duplicated code block detected (Line 5)", "[duplication] Duplicated code block detected (Line 8)", "[duplication] Duplicated code block detected (Line 44)", "[duplication] Duplicated code block detected (Line 47)", "[duplication] Duplicated code block detected (Line 51)", "[duplication] Duplicated code block detected (Line 54)", "[duplication] Duplicated code block detected (Line 74)", "[duplication] Duplicated code block detected (Line 110)", "[duplication] Duplicated code block detected (Line 207)", "[duplication] Duplicated code block detected (Line 220)", "[duplication] Duplicated code block detected (Line 230)"]}, {"id": 28, "name": "treeline.api.app", "type": "module", "is_entry": false, "metrics": {"functions": 5, "classes": 2, "complexity": 13}, "code_smells": ["[code_smells] Magic number detected (Line 60)", "[code_smells] Magic number detected (Line 61)", "[code_smells] Magic number detected (Line 531)", "[code_smells] Magic number detected (Line 19)", "[code_smells] Magic number detected (Line 80)", "[code_smells] Magic number detected (Line 272)", "[code_smells] Magic number detected (Line 274)", "[code_smells] Magic number detected (Line 358)", "[code_smells] Magic number detected (Line 396)", "[code_smells] Magic number detected (Line 528)", "[code_smells] Magic number detected (Line 280)", "[code_smells] Magic number detected (Line 210)", "[code_smells] Magic number detected (Line 223)", "[code_smells] Magic number detected (Line 229)", "[code_smells] Magic number detected (Line 253)", "[code_smells] Magic number detected (Line 412)", "[code_smells] Magic number detected (Line 427)", "[code_smells] Magic number detected (Line 485)", "[code_smells] Magic number detected (Line 497)", "[code_smells] Magic number detected (Line 514)", "[code_smells] Magic number detected (Line 141)", "[code_smells] Magic number detected (Line 302)", "[code_smells] Magic number detected (Line 323)", "[code_smells] Magic number detected (Line 121)", "[code_smells] Magic number detected (Line 187)", "[code_smells] Magic number detected (Line 442)", "[code_smells] Magic number detected (Line 420)", "[code_smells] Magic number detected (Line 428)", "[security] Possible hardcoded credential (Line 25)", "[security] Possible hardcoded credential (Line 44)", "[style] File has 534 lines (over 500)", "[style] Line is too long (Line 118)", "[style] Line is too long (Line 122)", "[style] Line is too long (Line 130)", "[style] Line is too long (Line 139)", "[style] Line is too long (Line 141)", "[style] Line is too long (Line 184)", "[style] Line is too long (Line 188)", "[style] Line is too long (Line 196)", "[style] Line is too long (Line 224)", "[style] Line is too long (Line 280)", "[style] Line is too long (Line 299)", "[style] Line is too long (Line 302)", "[style] Line is too long (Line 320)", "[style] Line is too long (Line 323)", "[style] Line is too long (Line 332)", "[style] Line is too long (Line 334)", "[style] Line is too long (Line 373)", "[style] Line is too long (Line 385)", "[style] Line is too long (Line 388)", "[style] Line is too long (Line 428)", "[style] Line is too long (Line 491)", "[style] Line is too long (Line 497)", "[style] Line is too long (Line 514)", "[duplication] Duplicated code block detected (Line 2)", "[duplication] Duplicated code block detected (Line 3)", "[duplication] Duplicated code block detected (Line 25)", "[duplication] Duplicated code block detected (Line 33)", "[duplication] Duplicated code block detected (Line 36)", "[duplication] Duplicated code block detected (Line 44)", "[duplication] Duplicated code block detected (Line 50)", "[duplication] Duplicated code block detected (Line 98)", "[duplication] Duplicated code block detected (Line 113)", "[duplication] Duplicated code block detected (Line 114)", "[duplication] Duplicated code block detected (Line 134)", "[duplication] Duplicated code block detected (Line 168)", "[duplication] Duplicated code block detected (Line 179)", "[duplication] Duplicated code block detected (Line 180)", "[duplication] Duplicated code block detected (Line 201)", "[duplication] Duplicated code block detected (Line 211)", "[duplication] Duplicated code block detected (Line 216)", "[duplication] Duplicated code block detected (Line 225)", "[duplication] Duplicated code block detected (Line 230)", "[duplication] Duplicated code block detected (Line 236)", "[duplication] Duplicated code block detected (Line 249)", "[duplication] Duplicated code block detected (Line 252)", "[duplication] Duplicated code block detected (Line 257)", "[duplication] Duplicated code block detected (Line 266)", "[duplication] Duplicated code block detected (Line 270)", "[duplication] Duplicated code block detected (Line 272)", "[duplication] Duplicated code block detected (Line 285)", "[duplication] Duplicated code block detected (Line 303)", "[duplication] Duplicated code block detected (Line 305)", "[duplication] Duplicated code block detected (Line 324)", "[duplication] Duplicated code block detected (Line 326)", "[duplication] Duplicated code block detected (Line 351)", "[duplication] Duplicated code block detected (Line 371)", "[duplication] Duplicated code block detected (Line 392)", "[duplication] Duplicated code block detected (Line 401)", "[duplication] Duplicated code block detected (Line 402)", "[duplication] Duplicated code block detected (Line 414)", "[duplication] Duplicated code block detected (Line 429)", "[duplication] Duplicated code block detected (Line 448)", "[duplication] Duplicated code block detected (Line 456)", "[duplication] Duplicated code block detected (Line 458)", "[duplication] Duplicated code block detected (Line 463)", "[duplication] Duplicated code block detected (Line 468)", "[duplication] Duplicated code block detected (Line 478)", "[duplication] Duplicated code block detected (Line 480)", "[duplication] Duplicated code block detected (Line 487)", "[duplication] Duplicated code block detected (Line 506)", "[duplication] Duplicated code block detected (Line 524)"]}, {"id": 29, "name": "treeline.cli", "type": "module", "is_entry": true, "metrics": {"functions": 6, "classes": 0, "complexity": 21}, "code_smells": ["[code_smells] Magic number detected (Line 32)", "[code_smells] Magic number detected (Line 80)", "[code_smells] Magic number detected (Line 31)", "[code_smells] Magic number detected (Line 79)", "[code_smells] Magic number detected (Line 142)", "[code_smells] Magic number detected (Line 151)", "[code_smells] Magic number detected (Line 55)", "[code_smells] Magic number detected (Line 70)", "[code_smells] Magic number detected (Line 101)", "[code_smells] Magic number detected (Line 109)", "[style] Line is too long (Line 80)", "[style] Line is too long (Line 152)", "[duplication] Duplicated code block detected (Line 3)", "[duplication] Duplicated code block detected (Line 36)", "[duplication] Duplicated code block detected (Line 63)", "[duplication] Duplicated code block detected (Line 74)", "[duplication] Duplicated code block detected (Line 84)", "[duplication] Duplicated code block detected (Line 115)", "[duplication] Duplicated code block detected (Line 127)", "[duplication] Duplicated code block detected (Line 155)", "[duplication] Duplicated code block detected (Line 162)", "[duplication] Duplicated code block detected (Line 167)", "[duplication] Duplicated code block detected (Line 172)"]}, {"id": 30, "name": "tests.test_treeline", "type": "module", "is_entry": true, "metrics": {"functions": 3, "classes": 1, "complexity": 3}, "code_smells": []}, {"id": 31, "name": "treeline.models.__init__", "type": "module", "is_entry": true, "metrics": {"functions": 0, "classes": 0, "complexity": 0}, "code_smells": []}, {"id": 32, "name": "tests.test_core", "type": "module", "is_entry": true, "metrics": {"functions": 4, "classes": 1, "complexity": 5}, "code_smells": ["[code_smells] Magic number detected (Line 38)"]}, {"id": 33, "name": "treeline.type_checker", "type": "module", "is_entry": false, "metrics": {"functions": 2, "classes": 3, "complexity": 25}, "code_smells": ["[code_smells] Magic number detected (Line 21)", "[code_smells] Magic number detected (Line 24)", "[code_smells] Magic number detected (Line 39)", "[code_smells] Magic number detected (Line 63)", "[style] Line is too long (Line 9)", "[style] Line is too long (Line 54)", "[complexity] High cyclomatic complexity (22 > 10) (Line 5)", "[complexity] High cognitive complexity (68 > 15) (Line 5)", "[complexity] High cyclomatic complexity (22 > 10) (Line 7)", "[complexity] High cognitive complexity (68 > 15) (Line 7)"]}, {"id": 34, "name": "treeline.checkers.complexity", "type": "module", "is_entry": false, "metrics": {"functions": 5, "classes": 1, "complexity": 19}, "code_smells": ["[code_smells] Magic number detected (Line 33)", "[code_smells] Magic number detected (Line 11)", "[code_smells] Magic number detected (Line 12)", "[code_smells] Magic number detected (Line 42)", "[code_smells] Magic number detected (Line 43)", "[code_smells] Magic number detected (Line 36)", "[code_smells] Magic number detected (Line 38)", "[code_smells] Magic number detected (Line 46)", "[code_smells] Magic number detected (Line 47)", "[code_smells] Magic number detected (Line 49)", "[style] Line is too long (Line 14)", "[style] Line is too long (Line 21)", "[style] Line is too long (Line 27)", "[style] Line is too long (Line 35)", "[complexity] High cyclomatic complexity (12 > 10) (Line 8)", "[complexity] High cognitive complexity (22 > 15) (Line 8)", "[duplication] Duplicated code block detected (Line 1)", "[duplication] Duplicated code block detected (Line 2)", "[duplication] Duplicated code block detected (Line 3)", "[duplication] Duplicated code block detected (Line 15)", "[duplication] Duplicated code block detected (Line 50)"]}, {"id": 35, "name": "tests.test_special_char", "type": "module", "is_entry": true, "metrics": {"functions": 3, "classes": 1, "complexity": 4}, "code_smells": ["[code_smells] Magic number detected (Line 12)"]}, {"id": 36, "name": "treeline.models.dependency_analyzer", "type": "module", "is_entry": false, "metrics": {"functions": 1, "classes": 10, "complexity": 3}, "code_smells": ["[duplication] Duplicated code block detected (Line 26)", "[duplication] Duplicated code block detected (Line 34)", "[duplication] Duplicated code block detected (Line 41)", "[duplication] Duplicated code block detected (Line 48)", "[duplication] Duplicated code block detected (Line 54)", "[duplication] Duplicated code block detected (Line 69)", "[duplication] Duplicated code block detected (Line 76)"]}, {"id": 37, "name": "treeline.utils.config", "type": "module", "is_entry": true, "metrics": {"functions": 1, "classes": 0, "complexity": 3}, "code_smells": ["[code_smells] Magic number detected (Line 6)", "[code_smells] Magic number detected (Line 7)", "[code_smells] Magic number detected (Line 8)", "[code_smells] Magic number detected (Line 9)", "[code_smells] Magic number detected (Line 10)", "[code_smells] Magic number detected (Line 11)", "[code_smells] Magic number detected (Line 12)", "[code_smells] Magic number detected (Line 13)", "[code_smells] Magic number detected (Line 14)", "[code_smells] Magic number detected (Line 15)", "[code_smells] Magic number detected (Line 16)", "[code_smells] Magic number detected (Line 17)", "[code_smells] Magic number detected (Line 18)", "[code_smells] Magic number detected (Line 19)", "[code_smells] Magic number detected (Line 20)", "[code_smells] Magic number detected (Line 21)", "[code_smells] Magic number detected (Line 22)", "[code_smells] Magic number detected (Line 23)", "[code_smells] Magic number detected (Line 24)", "[code_smells] Magic number detected (Line 25)", "[style] Line is too long (Line 37)", "[duplication] Duplicated code block detected (Line 2)", "[duplication] Duplicated code block detected (Line 3)", "[duplication] Duplicated code block detected (Line 31)"]}, {"id": 38, "name": "TestSpecialCharacters", "type": "class", "metrics": {"module": "tests.test_special_char", "file": "/Users/oha/treeline/tests/test_special_char.py", "line": 8, "methods": {"setUp": {"line": 9, "calls": []}, "tearDown": {"line": 14, "calls": []}, "test_special_characters": {"line": 21, "calls": ["generate_tree", "Path"]}}}, "methods": {"setUp": {"line": 9, "calls": []}, "tearDown": {"line": 14, "calls": []}, "test_special_characters": {"line": 21, "calls": ["generate_tree", "Path"]}}, "docstring": null, "code_smells": []}, {"id": 39, "name": "setUp", "type": "method", "parent_class": "TestSpecialCharacters", "metrics": {"line": 9, "calls": []}, "docstring": null}, {"id": 40, "name": "tearDown", "type": "method", "parent_class": "TestSpecialCharacters", "metrics": {"line": 14, "calls": []}, "docstring": null}, {"id": 41, "name": "test_special_characters", "type": "method", "parent_class": "TestSpecialCharacters", "metrics": {"line": 21, "calls": ["generate_tree", "Path"]}, "docstring": null}, {"id": 42, "name": "TestEmptyDirectory", "type": "class", "metrics": {"module": "tests.test_empty_dir", "file": "/Users/oha/treeline/tests/test_empty_dir.py", "line": 8, "methods": {"setUp": {"line": 9, "calls": []}, "tearDown": {"line": 14, "calls": []}, "test_empty_directory": {"line": 19, "calls": ["generate_tree"]}}}, "methods": {"setUp": {"line": 9, "calls": []}, "tearDown": {"line": 14, "calls": []}, "test_empty_directory": {"line": 19, "calls": ["generate_tree"]}}, "docstring": null, "code_smells": []}, {"id": 43, "name": "setUp", "type": "method", "parent_class": "TestEmptyDirectory", "metrics": {"line": 9, "calls": []}, "docstring": null}, {"id": 44, "name": "tearDown", "type": "method", "parent_class": "TestEmptyDirectory", "metrics": {"line": 14, "calls": []}, "docstring": null}, {"id": 45, "name": "test_empty_directory", "type": "method", "parent_class": "TestEmptyDirectory", "metrics": {"line": 19, "calls": ["generate_tree"]}, "docstring": null}, {"id": 46, "name": "TestTreeGenerator", "type": "class", "metrics": {"module": "tests.test_core", "file": "/Users/oha/treeline/tests/test_core.py", "line": 10, "methods": {"setUp": {"line": 11, "calls": ["Path", "Path"]}, "tearDown": {"line": 19, "calls": []}, "test_tree_structure": {"line": 24, "calls": ["generate_tree"]}, "test_markdown_creation": {"line": 36, "calls": ["generate_tree"]}}}, "methods": {"setUp": {"line": 11, "calls": ["Path", "Path"]}, "tearDown": {"line": 19, "calls": []}, "test_tree_structure": {"line": 24, "calls": ["generate_tree"]}, "test_markdown_creation": {"line": 36, "calls": ["generate_tree"]}}, "docstring": null, "code_smells": []}, {"id": 47, "name": "setUp", "type": "method", "parent_class": "TestTreeGenerator", "metrics": {"line": 11, "calls": ["Path", "Path"]}, "docstring": null}, {"id": 48, "name": "tearDown", "type": "method", "parent_class": "TestTreeGenerator", "metrics": {"line": 19, "calls": []}, "docstring": null}, {"id": 49, "name": "test_tree_structure", "type": "method", "parent_class": "TestTreeGenerator", "metrics": {"line": 24, "calls": ["generate_tree"]}, "docstring": null}, {"id": 50, "name": "test_markdown_creation", "type": "method", "parent_class": "TestTreeGenerator", "metrics": {"line": 36, "calls": ["generate_tree"]}, "docstring": null}, {"id": 51, "name": "TestTreeLine", "type": "class", "metrics": {"module": "tests.test_treeline", "file": "/Users/oha/treeline/tests/test_treeline.py", "line": 9, "methods": {"setUp": {"line": 10, "calls": ["open", "open"]}, "tearDown": {"line": 18, "calls": []}, "test_basic_tree": {"line": 21, "calls": ["treeline", "str"]}}}, "methods": {"setUp": {"line": 10, "calls": ["open", "open"]}, "tearDown": {"line": 18, "calls": []}, "test_basic_tree": {"line": 21, "calls": ["treeline", "str"]}}, "docstring": null, "code_smells": []}, {"id": 52, "name": "setUp", "type": "method", "parent_class": "TestTreeLine", "metrics": {"line": 10, "calls": ["open", "open"]}, "docstring": null}, {"id": 53, "name": "tearDown", "type": "method", "parent_class": "TestTreeLine", "metrics": {"line": 18, "calls": []}, "docstring": null}, {"id": 54, "name": "test_basic_tree", "type": "method", "parent_class": "TestTreeLine", "metrics": {"line": 21, "calls": ["treeline", "str"]}, "docstring": null}, {"id": 55, "name": "TestNestedDirectories", "type": "class", "metrics": {"module": "tests.test_nested_dir", "file": "/Users/oha/treeline/tests/test_nested_dir.py", "line": 8, "methods": {"setUp": {"line": 9, "calls": []}, "tearDown": {"line": 14, "calls": []}, "test_nested_directories": {"line": 21, "calls": ["generate_tree", "Path"]}}}, "methods": {"setUp": {"line": 9, "calls": []}, "tearDown": {"line": 14, "calls": []}, "test_nested_directories": {"line": 21, "calls": ["generate_tree", "Path"]}}, "docstring": null, "code_smells": []}, {"id": 56, "name": "setUp", "type": "method", "parent_class": "TestNestedDirectories", "metrics": {"line": 9, "calls": []}, "docstring": null}, {"id": 57, "name": "tearDown", "type": "method", "parent_class": "TestNestedDirectories", "metrics": {"line": 14, "calls": []}, "docstring": null}, {"id": 58, "name": "test_nested_directories", "type": "method", "parent_class": "TestNestedDirectories", "metrics": {"line": 21, "calls": ["generate_tree", "Path"]}, "docstring": null}, {"id": 59, "name": "MassiveClass", "type": "class", "metrics": {"module": "tests.do_not_use.test_problematic_code", "file": "/Users/oha/treeline/tests/do_not_use/test_problematic_code.py", "line": 250, "methods": {"__init__": {"line": 253, "calls": []}, "method1": {"line": 256, "calls": []}, "method2": {"line": 257, "calls": []}, "method3": {"line": 258, "calls": []}, "method4": {"line": 259, "calls": []}, "method5": {"line": 260, "calls": []}, "method6": {"line": 261, "calls": []}, "method7": {"line": 262, "calls": []}, "method8": {"line": 263, "calls": []}, "method9": {"line": 264, "calls": []}, "method10": {"line": 265, "calls": []}, "method11": {"line": 266, "calls": []}, "method12": {"line": 267, "calls": []}, "method13": {"line": 268, "calls": []}, "method14": {"line": 269, "calls": []}, "method15": {"line": 270, "calls": []}, "method16": {"line": 271, "calls": []}, "method17": {"line": 272, "calls": []}, "method18": {"line": 273, "calls": []}, "method19": {"line": 274, "calls": []}, "method20": {"line": 275, "calls": []}}}, "methods": {"__init__": {"line": 253, "calls": []}, "method1": {"line": 256, "calls": []}, "method2": {"line": 257, "calls": []}, "method3": {"line": 258, "calls": []}, "method4": {"line": 259, "calls": []}, "method5": {"line": 260, "calls": []}, "method6": {"line": 261, "calls": []}, "method7": {"line": 262, "calls": []}, "method8": {"line": 263, "calls": []}, "method9": {"line": 264, "calls": []}, "method10": {"line": 265, "calls": []}, "method11": {"line": 266, "calls": []}, "method12": {"line": 267, "calls": []}, "method13": {"line": 268, "calls": []}, "method14": {"line": 269, "calls": []}, "method15": {"line": 270, "calls": []}, "method16": {"line": 271, "calls": []}, "method17": {"line": 272, "calls": []}, "method18": {"line": 273, "calls": []}, "method19": {"line": 274, "calls": []}, "method20": {"line": 275, "calls": []}}, "docstring": null, "code_smells": []}, {"id": 60, "name": "__init__", "type": "method", "parent_class": "MassiveClass", "metrics": {"line": 253, "calls": []}, "docstring": null}, {"id": 61, "name": "method1", "type": "method", "parent_class": "MassiveClass", "metrics": {"line": 256, "calls": []}, "docstring": null}, {"id": 62, "name": "method2", "type": "method", "parent_class": "MassiveClass", "metrics": {"line": 257, "calls": []}, "docstring": null}, {"id": 63, "name": "method3", "type": "method", "parent_class": "MassiveClass", "metrics": {"line": 258, "calls": []}, "docstring": null}, {"id": 64, "name": "method4", "type": "method", "parent_class": "MassiveClass", "metrics": {"line": 259, "calls": []}, "docstring": null}, {"id": 65, "name": "method5", "type": "method", "parent_class": "MassiveClass", "metrics": {"line": 260, "calls": []}, "docstring": null}, {"id": 66, "name": "method6", "type": "method", "parent_class": "MassiveClass", "metrics": {"line": 261, "calls": []}, "docstring": null}, {"id": 67, "name": "method7", "type": "method", "parent_class": "MassiveClass", "metrics": {"line": 262, "calls": []}, "docstring": null}, {"id": 68, "name": "method8", "type": "method", "parent_class": "MassiveClass", "metrics": {"line": 263, "calls": []}, "docstring": null}, {"id": 69, "name": "method9", "type": "method", "parent_class": "MassiveClass", "metrics": {"line": 264, "calls": []}, "docstring": null}, {"id": 70, "name": "method10", "type": "method", "parent_class": "MassiveClass", "metrics": {"line": 265, "calls": []}, "docstring": null}, {"id": 71, "name": "method11", "type": "method", "parent_class": "MassiveClass", "metrics": {"line": 266, "calls": []}, "docstring": null}, {"id": 72, "name": "method12", "type": "method", "parent_class": "MassiveClass", "metrics": {"line": 267, "calls": []}, "docstring": null}, {"id": 73, "name": "method13", "type": "method", "parent_class": "MassiveClass", "metrics": {"line": 268, "calls": []}, "docstring": null}, {"id": 74, "name": "method14", "type": "method", "parent_class": "MassiveClass", "metrics": {"line": 269, "calls": []}, "docstring": null}, {"id": 75, "name": "method15", "type": "method", "parent_class": "MassiveClass", "metrics": {"line": 270, "calls": []}, "docstring": null}, {"id": 76, "name": "method16", "type": "method", "parent_class": "MassiveClass", "metrics": {"line": 271, "calls": []}, "docstring": null}, {"id": 77, "name": "method17", "type": "method", "parent_class": "MassiveClass", "metrics": {"line": 272, "calls": []}, "docstring": null}, {"id": 78, "name": "method18", "type": "method", "parent_class": "MassiveClass", "metrics": {"line": 273, "calls": []}, "docstring": null}, {"id": 79, "name": "method19", "type": "method", "parent_class": "MassiveClass", "metrics": {"line": 274, "calls": []}, "docstring": null}, {"id": 80, "name": "method20", "type": "method", "parent_class": "MassiveClass", "metrics": {"line": 275, "calls": []}, "docstring": null}, {"id": 81, "name": "TypeValidator", "type": "class", "metrics": {"module": "treeline.type_checker", "file": "/Users/oha/treeline/treeline/type_checker.py", "line": 5, "methods": {"validate": {"line": 7, "calls": ["get_origin", "get_args", "TypeError", "get_args", "get_origin", "type", "isinstance", "TypeError", "len", "type", "isinstance", "TypeError", "isinstance", "TypeError", "zip", "isinstance", "TypeError", "len", "len", "TypeError", "type", "type", "isinstance", "TypeError", "type", "type", "len", "len", "type"]}}}, "methods": {"validate": {"line": 7, "calls": ["get_origin", "get_args", "TypeError", "get_args", "get_origin", "type", "isinstance", "TypeError", "len", "type", "isinstance", "TypeError", "isinstance", "TypeError", "zip", "isinstance", "TypeError", "len", "len", "TypeError", "type", "type", "isinstance", "TypeError", "type", "type", "len", "len", "type"]}}, "docstring": null, "code_smells": []}, {"id": 82, "name": "validate", "type": "method", "parent_class": "TypeValidator", "metrics": {"line": 7, "calls": ["get_origin", "get_args", "TypeError", "get_args", "get_origin", "type", "isinstance", "TypeError", "len", "type", "isinstance", "TypeError", "isinstance", "TypeError", "zip", "isinstance", "TypeError", "len", "len", "TypeError", "type", "type", "isinstance", "TypeError", "type", "type", "len", "len", "type"]}, "docstring": null}, {"id": 83, "name": "TypeChecked", "type": "class", "metrics": {"module": "treeline.type_checker", "file": "/Users/oha/treeline/treeline/type_checker.py", "line": 70, "methods": {"__post_init__": {"line": 73, "calls": ["getattr", "TypeError", "str"]}}}, "methods": {"__post_init__": {"line": 73, "calls": ["getattr", "TypeError", "str"]}}, "docstring": null, "code_smells": []}, {"id": 84, "name": "__post_init__", "type": "method", "parent_class": "TypeChecked", "metrics": {"line": 73, "calls": ["getattr", "TypeError", "str"]}, "docstring": null}, {"id": 85, "name": "ValidationError", "type": "class", "metrics": {"module": "treeline.type_checker", "file": "/Users/oha/treeline/treeline/type_checker.py", "line": 83, "methods": {}}, "methods": {}, "docstring": null, "code_smells": []}, {"id": 86, "name": "ModuleDependencyAnalyzer", "type": "class", "metrics": {"module": "treeline.dependency_analyzer", "file": "/Users/oha/treeline/treeline/dependency_analyzer.py", "line": 16, "methods": {"__init__": {"line": 17, "calls": ["defaultdict", "defaultdict", "defaultdict", "defaultdict", "defaultdict", "defaultdict", "defaultdict", "defaultdict"]}, "analyze_directory": {"line": 67, "calls": ["read_ignore_patterns", "list", "any", "should_skip_module", "should_ignore", "str", "should_skip_module", "should_skip_module", "open", "str", "print", "should_skip_module"]}, "_analyze_module": {"line": 112, "calls": ["isinstance", "setattr", "getattr", "isinstance", "isinstance", "FunctionLocation", "isinstance", "isinstance", "isinstance", "FunctionCallInfo", "MethodInfo", "isinstance", "isinstance"]}, "_analyze_imports": {"line": 164, "calls": ["isinstance", "isinstance"]}, "_collect_metrics": {"line": 173, "calls": ["ModuleMetrics", "isinstance", "isinstance", "len", "len", "ComplexFunction"]}, "_calculate_complexity": {"line": 202, "calls": ["isinstance", "isinstance", "len"]}, "get_graph_data": {"line": 211, "calls": ["set", "len", "len", "any", "len", "len", "len"]}, "get_entry_points": {"line": 351, "calls": ["any"]}, "get_core_components": {"line": 358, "calls": ["sorted", "len", "len"]}, "get_graph_data_with_quality": {"line": 375, "calls": ["hasattr", "print", "Path", "sum", "isinstance", "print", "len", "Path", "print"]}, "get_common_flows": {"line": 436, "calls": ["sorted", "len", "len"]}, "clean_for_markdown": {"line": 445, "calls": []}}}, "methods": {"__init__": {"line": 17, "calls": ["defaultdict", "defaultdict", "defaultdict", "defaultdict", "defaultdict", "defaultdict", "defaultdict", "defaultdict"]}, "analyze_directory": {"line": 67, "calls": ["read_ignore_patterns", "list", "any", "should_skip_module", "should_ignore", "str", "should_skip_module", "should_skip_module", "open", "str", "print", "should_skip_module"]}, "_analyze_module": {"line": 112, "calls": ["isinstance", "setattr", "getattr", "isinstance", "isinstance", "FunctionLocation", "isinstance", "isinstance", "isinstance", "FunctionCallInfo", "MethodInfo", "isinstance", "isinstance"]}, "_analyze_imports": {"line": 164, "calls": ["isinstance", "isinstance"]}, "_collect_metrics": {"line": 173, "calls": ["ModuleMetrics", "isinstance", "isinstance", "len", "len", "ComplexFunction"]}, "_calculate_complexity": {"line": 202, "calls": ["isinstance", "isinstance", "len"]}, "get_graph_data": {"line": 211, "calls": ["set", "len", "len", "any", "len", "len", "len"]}, "get_entry_points": {"line": 351, "calls": ["any"]}, "get_core_components": {"line": 358, "calls": ["sorted", "len", "len"]}, "get_graph_data_with_quality": {"line": 375, "calls": ["hasattr", "print", "Path", "sum", "isinstance", "print", "len", "Path", "print"]}, "get_common_flows": {"line": 436, "calls": ["sorted", "len", "len"]}, "clean_for_markdown": {"line": 445, "calls": []}}, "docstring": null, "code_smells": []}, {"id": 87, "name": "__init__", "type": "method", "parent_class": "ModuleDependencyAnalyzer", "metrics": {"line": 17, "calls": ["defaultdict", "defaultdict", "defaultdict", "defaultdict", "defaultdict", "defaultdict", "defaultdict", "defaultdict"]}, "docstring": null}, {"id": 88, "name": "analyze_directory", "type": "method", "parent_class": "ModuleDependencyAnalyzer", "metrics": {"line": 67, "calls": ["read_ignore_patterns", "list", "any", "should_skip_module", "should_ignore", "str", "should_skip_module", "should_skip_module", "open", "str", "print", "should_skip_module"]}, "docstring": null}, {"id": 89, "name": "_analyze_module", "type": "method", "parent_class": "ModuleDependencyAnalyzer", "metrics": {"line": 112, "calls": ["isinstance", "setattr", "getattr", "isinstance", "isinstance", "FunctionLocation", "isinstance", "isinstance", "isinstance", "FunctionCallInfo", "MethodInfo", "isinstance", "isinstance"]}, "docstring": null}, {"id": 90, "name": "_analyze_imports", "type": "method", "parent_class": "ModuleDependencyAnalyzer", "metrics": {"line": 164, "calls": ["isinstance", "isinstance"]}, "docstring": null}, {"id": 91, "name": "_collect_metrics", "type": "method", "parent_class": "ModuleDependencyAnalyzer", "metrics": {"line": 173, "calls": ["ModuleMetrics", "isinstance", "isinstance", "len", "len", "ComplexFunction"]}, "docstring": null}, {"id": 92, "name": "_calculate_complexity", "type": "method", "parent_class": "ModuleDependencyAnalyzer", "metrics": {"line": 202, "calls": ["isinstance", "isinstance", "len"]}, "docstring": null}, {"id": 93, "name": "get_graph_data", "type": "method", "parent_class": "ModuleDependencyAnalyzer", "metrics": {"line": 211, "calls": ["set", "len", "len", "any", "len", "len", "len"]}, "docstring": null}, {"id": 94, "name": "get_entry_points", "type": "method", "parent_class": "ModuleDependencyAnalyzer", "metrics": {"line": 351, "calls": ["any"]}, "docstring": null}, {"id": 95, "name": "get_core_components", "type": "method", "parent_class": "ModuleDependencyAnalyzer", "metrics": {"line": 358, "calls": ["sorted", "len", "len"]}, "docstring": null}, {"id": 96, "name": "get_graph_data_with_quality", "type": "method", "parent_class": "ModuleDependencyAnalyzer", "metrics": {"line": 375, "calls": ["hasattr", "print", "Path", "sum", "isinstance", "print", "len", "Path", "print"]}, "docstring": null}, {"id": 97, "name": "get_common_flows", "type": "method", "parent_class": "ModuleDependencyAnalyzer", "metrics": {"line": 436, "calls": ["sorted", "len", "len"]}, "docstring": null}, {"id": 98, "name": "clean_for_markdown", "type": "method", "parent_class": "ModuleDependencyAnalyzer", "metrics": {"line": 445, "calls": []}, "docstring": null}, {"id": 99, "name": "CodeAnalyzer", "type": "class", "metrics": {"module": "treeline.analyzer", "file": "/Users/oha/treeline/treeline/analyzer.py", "line": 10, "methods": {"__init__": {"line": 23, "calls": ["defaultdict"]}, "analyze_file": {"line": 28, "calls": ["open", "CodeStructure", "isinstance", "CodeStructure", "isinstance", "print", "CodeStructure", "str", "isinstance"]}, "_get_function_params": {"line": 128, "calls": ["hasattr", "hasattr", "hasattr"]}, "_find_function_calls": {"line": 150, "calls": ["set", "isinstance", "isinstance", "FunctionCall", "print"]}, "get_symbol": {"line": 162, "calls": []}, "format_structure": {"line": 167, "calls": []}}}, "methods": {"__init__": {"line": 23, "calls": ["defaultdict"]}, "analyze_file": {"line": 28, "calls": ["open", "CodeStructure", "isinstance", "CodeStructure", "isinstance", "print", "CodeStructure", "str", "isinstance"]}, "_get_function_params": {"line": 128, "calls": ["hasattr", "hasattr", "hasattr"]}, "_find_function_calls": {"line": 150, "calls": ["set", "isinstance", "isinstance", "FunctionCall", "print"]}, "get_symbol": {"line": 162, "calls": []}, "format_structure": {"line": 167, "calls": []}}, "docstring": null, "code_smells": []}, {"id": 100, "name": "__init__", "type": "method", "parent_class": "CodeAnalyzer", "metrics": {"line": 23, "calls": ["defaultdict"]}, "docstring": null}, {"id": 101, "name": "analyze_file", "type": "method", "parent_class": "CodeAnalyzer", "metrics": {"line": 28, "calls": ["open", "CodeStructure", "isinstance", "CodeStructure", "isinstance", "print", "CodeStructure", "str", "isinstance"]}, "docstring": null}, {"id": 102, "name": "_get_function_params", "type": "method", "parent_class": "CodeAnalyzer", "metrics": {"line": 128, "calls": ["hasattr", "hasattr", "hasattr"]}, "docstring": null}, {"id": 103, "name": "_find_function_calls", "type": "method", "parent_class": "CodeAnalyzer", "metrics": {"line": 150, "calls": ["set", "isinstance", "isinstance", "FunctionCall", "print"]}, "docstring": null}, {"id": 104, "name": "get_symbol", "type": "method", "parent_class": "CodeAnalyzer", "metrics": {"line": 162, "calls": []}, "docstring": null}, {"id": 105, "name": "format_structure", "type": "method", "parent_class": "CodeAnalyzer", "metrics": {"line": 167, "calls": []}, "docstring": null}, {"id": 106, "name": "EnhancedCodeAnalyzer", "type": "class", "metrics": {"module": "treeline.enhanced_analyzer", "file": "/Users/oha/treeline/treeline/enhanced_analyzer.py", "line": 15, "methods": {"__init__": {"line": 16, "calls": ["defaultdict", "defaultdict", "CodeSmellChecker", "ComplexityAnalyzer", "SecurityAnalyzer", "DuplicationDetector", "MagicNumberChecker", "SQLInjectionChecker", "StyleChecker"]}, "analyze_file": {"line": 29, "calls": ["print", "print", "print", "print", "print", "print", "print"]}, "_add_file_issues_to_elements": {"line": 83, "calls": ["str", "float", "isinstance"]}, "analyze_directory": {"line": 125, "calls": []}, "generate_report": {"line": 132, "calls": []}, "_read_file": {"line": 141, "calls": ["open", "str"]}, "_parse_content": {"line": 149, "calls": ["str"]}, "_add_issue": {"line": 156, "calls": ["QualityIssue"]}, "_analyze_code_elements": {"line": 160, "calls": ["isinstance", "isinstance"]}, "_add_quality_issues_to_element": {"line": 176, "calls": ["str", "isinstance", "abs"]}, "_analyze_function": {"line": 194, "calls": ["len", "len"]}, "_analyze_class": {"line": 214, "calls": ["len", "isinstance", "len"]}, "_calculate_complexity": {"line": 232, "calls": ["isinstance", "isinstance", "len"]}}}, "methods": {"__init__": {"line": 16, "calls": ["defaultdict", "defaultdict", "CodeSmellChecker", "ComplexityAnalyzer", "SecurityAnalyzer", "DuplicationDetector", "MagicNumberChecker", "SQLInjectionChecker", "StyleChecker"]}, "analyze_file": {"line": 29, "calls": ["print", "print", "print", "print", "print", "print", "print"]}, "_add_file_issues_to_elements": {"line": 83, "calls": ["str", "float", "isinstance"]}, "analyze_directory": {"line": 125, "calls": []}, "generate_report": {"line": 132, "calls": []}, "_read_file": {"line": 141, "calls": ["open", "str"]}, "_parse_content": {"line": 149, "calls": ["str"]}, "_add_issue": {"line": 156, "calls": ["QualityIssue"]}, "_analyze_code_elements": {"line": 160, "calls": ["isinstance", "isinstance"]}, "_add_quality_issues_to_element": {"line": 176, "calls": ["str", "isinstance", "abs"]}, "_analyze_function": {"line": 194, "calls": ["len", "len"]}, "_analyze_class": {"line": 214, "calls": ["len", "isinstance", "len"]}, "_calculate_complexity": {"line": 232, "calls": ["isinstance", "isinstance", "len"]}}, "docstring": null, "code_smells": []}, {"id": 107, "name": "__init__", "type": "method", "parent_class": "EnhancedCodeAnalyzer", "metrics": {"line": 16, "calls": ["defaultdict", "defaultdict", "CodeSmellChecker", "ComplexityAnalyzer", "SecurityAnalyzer", "DuplicationDetector", "MagicNumberChecker", "SQLInjectionChecker", "StyleChecker"]}, "docstring": null}, {"id": 108, "name": "analyze_file", "type": "method", "parent_class": "EnhancedCodeAnalyzer", "metrics": {"line": 29, "calls": ["print", "print", "print", "print", "print", "print", "print"]}, "docstring": null}, {"id": 109, "name": "_add_file_issues_to_elements", "type": "method", "parent_class": "EnhancedCodeAnalyzer", "metrics": {"line": 83, "calls": ["str", "float", "isinstance"]}, "docstring": null}, {"id": 110, "name": "analyze_directory", "type": "method", "parent_class": "EnhancedCodeAnalyzer", "metrics": {"line": 125, "calls": []}, "docstring": null}, {"id": 111, "name": "generate_report", "type": "method", "parent_class": "EnhancedCodeAnalyzer", "metrics": {"line": 132, "calls": []}, "docstring": null}, {"id": 112, "name": "_read_file", "type": "method", "parent_class": "EnhancedCodeAnalyzer", "metrics": {"line": 141, "calls": ["open", "str"]}, "docstring": null}, {"id": 113, "name": "_parse_content", "type": "method", "parent_class": "EnhancedCodeAnalyzer", "metrics": {"line": 149, "calls": ["str"]}, "docstring": null}, {"id": 114, "name": "_add_issue", "type": "method", "parent_class": "EnhancedCodeAnalyzer", "metrics": {"line": 156, "calls": ["QualityIssue"]}, "docstring": null}, {"id": 115, "name": "_analyze_code_elements", "type": "method", "parent_class": "EnhancedCodeAnalyzer", "metrics": {"line": 160, "calls": ["isinstance", "isinstance"]}, "docstring": null}, {"id": 116, "name": "_add_quality_issues_to_element", "type": "method", "parent_class": "EnhancedCodeAnalyzer", "metrics": {"line": 176, "calls": ["str", "isinstance", "abs"]}, "docstring": null}, {"id": 117, "name": "_analyze_function", "type": "method", "parent_class": "EnhancedCodeAnalyzer", "metrics": {"line": 194, "calls": ["len", "len"]}, "docstring": null}, {"id": 118, "name": "_analyze_class", "type": "method", "parent_class": "EnhancedCodeAnalyzer", "metrics": {"line": 214, "calls": ["len", "isinstance", "len"]}, "docstring": null}, {"id": 119, "name": "_calculate_complexity", "type": "method", "parent_class": "EnhancedCodeAnalyzer", "metrics": {"line": 232, "calls": ["isinstance", "isinstance", "len"]}, "docstring": null}, {"id": 120, "name": "MagicNumberChecker", "type": "class", "metrics": {"module": "treeline.checkers.magic_numbers", "file": "/Users/oha/treeline/treeline/checkers/magic_numbers.py", "line": 6, "methods": {"__init__": {"line": 7, "calls": []}, "check": {"line": 10, "calls": ["isinstance", "isinstance", "isinstance", "isinstance", "len", "str"]}, "_get_parent": {"line": 24, "calls": []}}}, "methods": {"__init__": {"line": 7, "calls": []}, "check": {"line": 10, "calls": ["isinstance", "isinstance", "isinstance", "isinstance", "len", "str"]}, "_get_parent": {"line": 24, "calls": []}}, "docstring": null, "code_smells": []}, {"id": 121, "name": "__init__", "type": "method", "parent_class": "MagicNumberChecker", "metrics": {"line": 7, "calls": []}, "docstring": null}, {"id": 122, "name": "check", "type": "method", "parent_class": "MagicNumberChecker", "metrics": {"line": 10, "calls": ["isinstance", "isinstance", "isinstance", "isinstance", "len", "str"]}, "docstring": null}, {"id": 123, "name": "_get_parent", "type": "method", "parent_class": "MagicNumberChecker", "metrics": {"line": 24, "calls": []}, "docstring": null}, {"id": 124, "name": "ComplexityAnalyzer", "type": "class", "metrics": {"module": "treeline.checkers.complexity", "file": "/Users/oha/treeline/treeline/checkers/complexity.py", "line": 8, "methods": {"__init__": {"line": 9, "calls": []}, "check": {"line": 14, "calls": ["isinstance", "QualityIssue", "QualityIssue", "str", "str"]}, "_calculate_cyclomatic_complexity": {"line": 32, "calls": ["isinstance", "isinstance", "len"]}, "_calculate_cognitive_complexity": {"line": 41, "calls": ["walk_cognitive", "isinstance", "walk_cognitive", "isinstance", "walk_cognitive", "len"]}}}, "methods": {"__init__": {"line": 9, "calls": []}, "check": {"line": 14, "calls": ["isinstance", "QualityIssue", "QualityIssue", "str", "str"]}, "_calculate_cyclomatic_complexity": {"line": 32, "calls": ["isinstance", "isinstance", "len"]}, "_calculate_cognitive_complexity": {"line": 41, "calls": ["walk_cognitive", "isinstance", "walk_cognitive", "isinstance", "walk_cognitive", "len"]}}, "docstring": null, "code_smells": []}, {"id": 125, "name": "__init__", "type": "method", "parent_class": "ComplexityAnalyzer", "metrics": {"line": 9, "calls": []}, "docstring": null}, {"id": 126, "name": "check", "type": "method", "parent_class": "ComplexityAnalyzer", "metrics": {"line": 14, "calls": ["isinstance", "QualityIssue", "QualityIssue", "str", "str"]}, "docstring": null}, {"id": 127, "name": "_calculate_cyclomatic_complexity", "type": "method", "parent_class": "ComplexityAnalyzer", "metrics": {"line": 32, "calls": ["isinstance", "isinstance", "len"]}, "docstring": null}, {"id": 128, "name": "_calculate_cognitive_complexity", "type": "method", "parent_class": "ComplexityAnalyzer", "metrics": {"line": 41, "calls": ["walk_cognitive", "isinstance", "walk_cognitive", "isinstance", "walk_cognitive", "len"]}, "docstring": null}, {"id": 129, "name": "DuplicationDetector", "type": "class", "metrics": {"module": "treeline.checkers.duplication", "file": "/Users/oha/treeline/treeline/checkers/duplication.py", "line": 8, "methods": {"__init__": {"line": 9, "calls": []}, "analyze_directory": {"line": 13, "calls": ["enumerate", "open", "str", "QualityIssue"]}}}, "methods": {"__init__": {"line": 9, "calls": []}, "analyze_directory": {"line": 13, "calls": ["enumerate", "open", "str", "QualityIssue"]}}, "docstring": null, "code_smells": []}, {"id": 130, "name": "__init__", "type": "method", "parent_class": "DuplicationDetector", "metrics": {"line": 9, "calls": []}, "docstring": null}, {"id": 131, "name": "analyze_directory", "type": "method", "parent_class": "DuplicationDetector", "metrics": {"line": 13, "calls": ["enumerate", "open", "str", "QualityIssue"]}, "docstring": null}, {"id": 132, "name": "SecurityAnalyzer", "type": "class", "metrics": {"module": "treeline.checkers.security", "file": "/Users/oha/treeline/treeline/checkers/security.py", "line": 8, "methods": {"__init__": {"line": 9, "calls": []}, "check": {"line": 12, "calls": []}, "_check_hardcoded_credentials": {"line": 15, "calls": ["isinstance", "any", "QualityIssue", "str"]}}}, "methods": {"__init__": {"line": 9, "calls": []}, "check": {"line": 12, "calls": []}, "_check_hardcoded_credentials": {"line": 15, "calls": ["isinstance", "any", "QualityIssue", "str"]}}, "docstring": null, "code_smells": []}, {"id": 133, "name": "__init__", "type": "method", "parent_class": "SecurityAnalyzer", "metrics": {"line": 9, "calls": []}, "docstring": null}, {"id": 134, "name": "check", "type": "method", "parent_class": "SecurityAnalyzer", "metrics": {"line": 12, "calls": []}, "docstring": null}, {"id": 135, "name": "_check_hardcoded_credentials", "type": "method", "parent_class": "SecurityAnalyzer", "metrics": {"line": 15, "calls": ["isinstance", "any", "QualityIssue", "str"]}, "docstring": null}, {"id": 136, "name": "CodeSmellChecker", "type": "class", "metrics": {"module": "treeline.checkers.code_smells", "file": "/Users/oha/treeline/treeline/checkers/code_smells.py", "line": 8, "methods": {"__init__": {"line": 9, "calls": []}, "check": {"line": 13, "calls": []}, "_check_magic_numbers": {"line": 17, "calls": ["isinstance", "isinstance", "QualityIssue", "str"]}, "_check_long_parameter_lists": {"line": 26, "calls": ["isinstance", "len", "QualityIssue", "str"]}}}, "methods": {"__init__": {"line": 9, "calls": []}, "check": {"line": 13, "calls": []}, "_check_magic_numbers": {"line": 17, "calls": ["isinstance", "isinstance", "QualityIssue", "str"]}, "_check_long_parameter_lists": {"line": 26, "calls": ["isinstance", "len", "QualityIssue", "str"]}}, "docstring": null, "code_smells": []}, {"id": 137, "name": "__init__", "type": "method", "parent_class": "CodeSmellChecker", "metrics": {"line": 9, "calls": []}, "docstring": null}, {"id": 138, "name": "check", "type": "method", "parent_class": "CodeSmellChecker", "metrics": {"line": 13, "calls": []}, "docstring": null}, {"id": 139, "name": "_check_magic_numbers", "type": "method", "parent_class": "CodeSmellChecker", "metrics": {"line": 17, "calls": ["isinstance", "isinstance", "QualityIssue", "str"]}, "docstring": null}, {"id": 140, "name": "_check_long_parameter_lists", "type": "method", "parent_class": "CodeSmellChecker", "metrics": {"line": 26, "calls": ["isinstance", "len", "QualityIssue", "str"]}, "docstring": null}, {"id": 141, "name": "StyleChecker", "type": "class", "metrics": {"module": "treeline.checkers.style_checker", "file": "/Users/oha/treeline/treeline/checkers/style_checker.py", "line": 6, "methods": {"__init__": {"line": 7, "calls": []}, "check": {"line": 12, "calls": ["enumerate", "open", "len", "len", "QualityIssue", "QualityIssue", "str", "str", "len"]}}}, "methods": {"__init__": {"line": 7, "calls": []}, "check": {"line": 12, "calls": ["enumerate", "open", "len", "len", "QualityIssue", "QualityIssue", "str", "str", "len"]}}, "docstring": null, "code_smells": []}, {"id": 142, "name": "__init__", "type": "method", "parent_class": "StyleChecker", "metrics": {"line": 7, "calls": []}, "docstring": null}, {"id": 143, "name": "check", "type": "method", "parent_class": "StyleChecker", "metrics": {"line": 12, "calls": ["enumerate", "open", "len", "len", "QualityIssue", "QualityIssue", "str", "str", "len"]}, "docstring": null}, {"id": 144, "name": "SQLInjectionChecker", "type": "class", "metrics": {"module": "treeline.checkers.sql_injection", "file": "/Users/oha/treeline/treeline/checkers/sql_injection.py", "line": 6, "methods": {"__init__": {"line": 7, "calls": []}, "check": {"line": 10, "calls": ["isinstance", "isinstance", "any", "isinstance", "isinstance", "str"]}}}, "methods": {"__init__": {"line": 7, "calls": []}, "check": {"line": 10, "calls": ["isinstance", "isinstance", "any", "isinstance", "isinstance", "str"]}}, "docstring": null, "code_smells": []}, {"id": 145, "name": "__init__", "type": "method", "parent_class": "SQLInjectionChecker", "metrics": {"line": 7, "calls": []}, "docstring": null}, {"id": 146, "name": "check", "type": "method", "parent_class": "SQLInjectionChecker", "metrics": {"line": 10, "calls": ["isinstance", "isinstance", "any", "isinstance", "isinstance", "str"]}, "docstring": null}, {"id": 147, "name": "OptimizedDependencyGraph", "type": "class", "metrics": {"module": "treeline.optimization.graph", "file": "/Users/oha/treeline/treeline/optimization/graph.py", "line": 5, "methods": {"__init__": {"line": 8, "calls": ["defaultdict"]}, "_get_node_index": {"line": 16, "calls": []}, "add_edge": {"line": 25, "calls": []}, "get_connected_components": {"line": 36, "calls": []}, "get_dependency_chain": {"line": 46, "calls": []}, "_strongly_connected_components": {"line": 53, "calls": ["set", "range", "set", "strongconnect", "strongconnect", "min", "min"]}, "get_cycles": {"line": 92, "calls": ["set", "set", "range", "zip", "dfs", "dfs"]}}}, "methods": {"__init__": {"line": 8, "calls": ["defaultdict"]}, "_get_node_index": {"line": 16, "calls": []}, "add_edge": {"line": 25, "calls": []}, "get_connected_components": {"line": 36, "calls": []}, "get_dependency_chain": {"line": 46, "calls": []}, "_strongly_connected_components": {"line": 53, "calls": ["set", "range", "set", "strongconnect", "strongconnect", "min", "min"]}, "get_cycles": {"line": 92, "calls": ["set", "set", "range", "zip", "dfs", "dfs"]}}, "docstring": null, "code_smells": []}, {"id": 148, "name": "__init__", "type": "method", "parent_class": "OptimizedDependencyGraph", "metrics": {"line": 8, "calls": ["defaultdict"]}, "docstring": null}, {"id": 149, "name": "_get_node_index", "type": "method", "parent_class": "OptimizedDependencyGraph", "metrics": {"line": 16, "calls": []}, "docstring": null}, {"id": 150, "name": "add_edge", "type": "method", "parent_class": "OptimizedDependencyGraph", "metrics": {"line": 25, "calls": []}, "docstring": null}, {"id": 151, "name": "get_connected_components", "type": "method", "parent_class": "OptimizedDependencyGraph", "metrics": {"line": 36, "calls": []}, "docstring": null}, {"id": 152, "name": "get_dependency_chain", "type": "method", "parent_class": "OptimizedDependencyGraph", "metrics": {"line": 46, "calls": []}, "docstring": null}, {"id": 153, "name": "_strongly_connected_components", "type": "method", "parent_class": "OptimizedDependencyGraph", "metrics": {"line": 53, "calls": ["set", "range", "set", "strongconnect", "strongconnect", "min", "min"]}, "docstring": null}, {"id": 154, "name": "get_cycles", "type": "method", "parent_class": "OptimizedDependencyGraph", "metrics": {"line": 92, "calls": ["set", "set", "range", "zip", "dfs", "dfs"]}, "docstring": null}, {"id": 155, "name": "IndexEntry", "type": "class", "metrics": {"module": "treeline.optimization.indexer", "file": "/Users/oha/treeline/treeline/optimization/indexer.py", "line": 15, "methods": {}}, "methods": {}, "docstring": null, "code_smells": []}, {"id": 156, "name": "FastIndexer", "type": "class", "metrics": {"module": "treeline.optimization.indexer", "file": "/Users/oha/treeline/treeline/optimization/indexer.py", "line": 27, "methods": {"__init__": {"line": 28, "calls": ["defaultdict", "defaultdict"]}, "_load_index_state": {"line": 41, "calls": ["Path", "open", "print"]}, "_save_index_state": {"line": 50, "calls": ["open", "print"]}, "_fast_hash_file": {"line": 57, "calls": ["open"]}, "_parse_file_fast": {"line": 71, "calls": ["open", "print", "isinstance", "IndexEntry", "isinstance", "str", "set", "isinstance", "isinstance"]}, "index_codebase": {"line": 116, "calls": ["list", "len", "print", "print", "len", "print", "print", "print", "ProcessPoolExecutor", "enumerate", "str", "print", "ProcessPoolExecutor", "enumerate", "print", "print", "str", "print", "print"]}, "get_dependencies": {"line": 199, "calls": ["set", "list", "list"]}, "get_dependents": {"line": 212, "calls": ["set", "list", "list"]}, "get_definitions_for_file": {"line": 225, "calls": []}}}, "methods": {"__init__": {"line": 28, "calls": ["defaultdict", "defaultdict"]}, "_load_index_state": {"line": 41, "calls": ["Path", "open", "print"]}, "_save_index_state": {"line": 50, "calls": ["open", "print"]}, "_fast_hash_file": {"line": 57, "calls": ["open"]}, "_parse_file_fast": {"line": 71, "calls": ["open", "print", "isinstance", "IndexEntry", "isinstance", "str", "set", "isinstance", "isinstance"]}, "index_codebase": {"line": 116, "calls": ["list", "len", "print", "print", "len", "print", "print", "print", "ProcessPoolExecutor", "enumerate", "str", "print", "ProcessPoolExecutor", "enumerate", "print", "print", "str", "print", "print"]}, "get_dependencies": {"line": 199, "calls": ["set", "list", "list"]}, "get_dependents": {"line": 212, "calls": ["set", "list", "list"]}, "get_definitions_for_file": {"line": 225, "calls": []}}, "docstring": null, "code_smells": []}, {"id": 157, "name": "__init__", "type": "method", "parent_class": "FastIndexer", "metrics": {"line": 28, "calls": ["defaultdict", "defaultdict"]}, "docstring": null}, {"id": 158, "name": "_load_index_state", "type": "method", "parent_class": "FastIndexer", "metrics": {"line": 41, "calls": ["Path", "open", "print"]}, "docstring": null}, {"id": 159, "name": "_save_index_state", "type": "method", "parent_class": "FastIndexer", "metrics": {"line": 50, "calls": ["open", "print"]}, "docstring": null}, {"id": 160, "name": "_fast_hash_file", "type": "method", "parent_class": "FastIndexer", "metrics": {"line": 57, "calls": ["open"]}, "docstring": null}, {"id": 161, "name": "_parse_file_fast", "type": "method", "parent_class": "FastIndexer", "metrics": {"line": 71, "calls": ["open", "print", "isinstance", "IndexEntry", "isinstance", "str", "set", "isinstance", "isinstance"]}, "docstring": null}, {"id": 162, "name": "index_codebase", "type": "method", "parent_class": "FastIndexer", "metrics": {"line": 116, "calls": ["list", "len", "print", "print", "len", "print", "print", "print", "ProcessPoolExecutor", "enumerate", "str", "print", "ProcessPoolExecutor", "enumerate", "print", "print", "str", "print", "print"]}, "docstring": null}, {"id": 163, "name": "get_dependencies", "type": "method", "parent_class": "FastIndexer", "metrics": {"line": 199, "calls": ["set", "list", "list"]}, "docstring": null}, {"id": 164, "name": "get_dependents", "type": "method", "parent_class": "FastIndexer", "metrics": {"line": 212, "calls": ["set", "list", "list"]}, "docstring": null}, {"id": 165, "name": "get_definitions_for_file", "type": "method", "parent_class": "FastIndexer", "metrics": {"line": 225, "calls": []}, "docstring": null}, {"id": 166, "name": "ReportGenerator", "type": "class", "metrics": {"module": "treeline.utils.report", "file": "/Users/oha/treeline/treeline/utils/report.py", "line": 6, "methods": {"__init__": {"line": 7, "calls": ["ModuleDependencyAnalyzer", "EnhancedCodeAnalyzer", "defaultdict", "defaultdict", "defaultdict", "Path"]}, "analyze": {"line": 28, "calls": ["print", "sum", "print", "len", "print", "isinstance", "len"]}, "generate_report": {"line": 66, "calls": ["sorted", "len", "sorted", "defaultdict", "len", "len", "isinstance", "isinstance", "isinstance", "len", "len", "len", "Path", "Path", "len", "len", "len", "len", "Path", "Path", "Path", "Path", "len"]}, "save_report": {"line": 195, "calls": ["print", "open"]}, "_should_analyze_file": {"line": 210, "calls": ["any", "str"]}}}, "methods": {"__init__": {"line": 7, "calls": ["ModuleDependencyAnalyzer", "EnhancedCodeAnalyzer", "defaultdict", "defaultdict", "defaultdict", "Path"]}, "analyze": {"line": 28, "calls": ["print", "sum", "print", "len", "print", "isinstance", "len"]}, "generate_report": {"line": 66, "calls": ["sorted", "len", "sorted", "defaultdict", "len", "len", "isinstance", "isinstance", "isinstance", "len", "len", "len", "Path", "Path", "len", "len", "len", "len", "Path", "Path", "Path", "Path", "len"]}, "save_report": {"line": 195, "calls": ["print", "open"]}, "_should_analyze_file": {"line": 210, "calls": ["any", "str"]}}, "docstring": null, "code_smells": []}, {"id": 167, "name": "__init__", "type": "method", "parent_class": "ReportGenerator", "metrics": {"line": 7, "calls": ["ModuleDependencyAnalyzer", "EnhancedCodeAnalyzer", "defaultdict", "defaultdict", "defaultdict", "Path"]}, "docstring": null}, {"id": 168, "name": "analyze", "type": "method", "parent_class": "ReportGenerator", "metrics": {"line": 28, "calls": ["print", "sum", "print", "len", "print", "isinstance", "len"]}, "docstring": null}, {"id": 169, "name": "generate_report", "type": "method", "parent_class": "ReportGenerator", "metrics": {"line": 66, "calls": ["sorted", "len", "sorted", "defaultdict", "len", "len", "isinstance", "isinstance", "isinstance", "len", "len", "len", "Path", "Path", "len", "len", "len", "len", "Path", "Path", "Path", "Path", "len"]}, "docstring": null}, {"id": 170, "name": "save_report", "type": "method", "parent_class": "ReportGenerator", "metrics": {"line": 195, "calls": ["print", "open"]}, "docstring": null}, {"id": 171, "name": "_should_analyze_file", "type": "method", "parent_class": "ReportGenerator", "metrics": {"line": 210, "calls": ["any", "str"]}, "docstring": null}, {"id": 172, "name": "FunctionLocation", "type": "class", "metrics": {"module": "treeline.models.dependency_analyzer", "file": "/Users/oha/treeline/treeline/models/dependency_analyzer.py", "line": 7, "methods": {}}, "methods": {}, "docstring": null, "code_smells": []}, {"id": 173, "name": "FunctionCallInfo", "type": "class", "metrics": {"module": "treeline.models.dependency_analyzer", "file": "/Users/oha/treeline/treeline/models/dependency_analyzer.py", "line": 14, "methods": {}}, "methods": {}, "docstring": null, "code_smells": []}, {"id": 174, "name": "ClassMethod", "type": "class", "metrics": {"module": "treeline.models.dependency_analyzer", "file": "/Users/oha/treeline/treeline/models/dependency_analyzer.py", "line": 21, "methods": {}}, "methods": {}, "docstring": null, "code_smells": []}, {"id": 175, "name": "ClassInfo", "type": "class", "metrics": {"module": "treeline.models.dependency_analyzer", "file": "/Users/oha/treeline/treeline/models/dependency_analyzer.py", "line": 27, "methods": {}}, "methods": {}, "docstring": null, "code_smells": []}, {"id": 176, "name": "ModuleMetrics", "type": "class", "metrics": {"module": "treeline.models.dependency_analyzer", "file": "/Users/oha/treeline/treeline/models/dependency_analyzer.py", "line": 35, "methods": {}}, "methods": {}, "docstring": null, "code_smells": []}, {"id": 177, "name": "ComplexFunction", "type": "class", "metrics": {"module": "treeline.models.dependency_analyzer", "file": "/Users/oha/treeline/treeline/models/dependency_analyzer.py", "line": 42, "methods": {}}, "methods": {}, "docstring": null, "code_smells": []}, {"id": 178, "name": "MethodInfo", "type": "class", "metrics": {"module": "treeline.models.dependency_analyzer", "file": "/Users/oha/treeline/treeline/models/dependency_analyzer.py", "line": 49, "methods": {}}, "methods": {}, "docstring": null, "code_smells": []}, {"id": 179, "name": "Node", "type": "class", "metrics": {"module": "treeline.models.dependency_analyzer", "file": "/Users/oha/treeline/treeline/models/dependency_analyzer.py", "line": 55, "methods": {"__post_init__": {"line": 62, "calls": []}}}, "methods": {"__post_init__": {"line": 62, "calls": []}}, "docstring": null, "code_smells": []}, {"id": 180, "name": "__post_init__", "type": "method", "parent_class": "Node", "metrics": {"line": 62, "calls": []}, "docstring": null}, {"id": 181, "name": "Link", "type": "class", "metrics": {"module": "treeline.models.dependency_analyzer", "file": "/Users/oha/treeline/treeline/models/dependency_analyzer.py", "line": 70, "methods": {}}, "methods": {}, "docstring": null, "code_smells": []}, {"id": 182, "name": "GraphData", "type": "class", "metrics": {"module": "treeline.models.dependency_analyzer", "file": "/Users/oha/treeline/treeline/models/dependency_analyzer.py", "line": 77, "methods": {}}, "methods": {}, "docstring": null, "code_smells": []}, {"id": 183, "name": "FunctionCall", "type": "class", "metrics": {"module": "treeline.models.analyzer", "file": "/Users/oha/treeline/treeline/models/analyzer.py", "line": 8, "methods": {}}, "methods": {}, "docstring": null, "code_smells": []}, {"id": 184, "name": "CodeStructure", "type": "class", "metrics": {"module": "treeline.models.analyzer", "file": "/Users/oha/treeline/treeline/models/analyzer.py", "line": 14, "methods": {}}, "methods": {}, "docstring": null, "code_smells": []}, {"id": 185, "name": "FunctionNode", "type": "class", "metrics": {"module": "treeline.models.analyzer", "file": "/Users/oha/treeline/treeline/models/analyzer.py", "line": 23, "methods": {}}, "methods": {}, "docstring": null, "code_smells": []}, {"id": 186, "name": "ClassNode", "type": "class", "metrics": {"module": "treeline.models.analyzer", "file": "/Users/oha/treeline/treeline/models/analyzer.py", "line": 32, "methods": {}}, "methods": {}, "docstring": null, "code_smells": []}, {"id": 187, "name": "AnalyzerConfig", "type": "class", "metrics": {"module": "treeline.models.analyzer", "file": "/Users/oha/treeline/treeline/models/analyzer.py", "line": 41, "methods": {}}, "methods": {}, "docstring": null, "code_smells": []}, {"id": 188, "name": "FunctionMetrics", "type": "class", "metrics": {"module": "treeline.models.enhanced_analyzer", "file": "/Users/oha/treeline/treeline/models/enhanced_analyzer.py", "line": 8, "methods": {}}, "methods": {}, "docstring": null, "code_smells": []}, {"id": 189, "name": "ClassMetrics", "type": "class", "metrics": {"module": "treeline.models.enhanced_analyzer", "file": "/Users/oha/treeline/treeline/models/enhanced_analyzer.py", "line": 22, "methods": {}}, "methods": {}, "docstring": null, "code_smells": []}, {"id": 190, "name": "CodeDuplication", "type": "class", "metrics": {"module": "treeline.models.enhanced_analyzer", "file": "/Users/oha/treeline/treeline/models/enhanced_analyzer.py", "line": 35, "methods": {}}, "methods": {}, "docstring": null, "code_smells": []}, {"id": 191, "name": "QualityIssue", "type": "class", "metrics": {"module": "treeline.models.enhanced_analyzer", "file": "/Users/oha/treeline/treeline/models/enhanced_analyzer.py", "line": 41, "methods": {}}, "methods": {}, "docstring": null, "code_smells": []}, {"id": 192, "name": "CodeStructure", "type": "class", "metrics": {"module": "treeline.models.core", "file": "/Users/oha/treeline/treeline/models/core.py", "line": 9, "methods": {}}, "methods": {}, "docstring": null, "code_smells": []}, {"id": 193, "name": "TreeOptions", "type": "class", "metrics": {"module": "treeline.models.core", "file": "/Users/oha/treeline/treeline/models/core.py", "line": 18, "methods": {}}, "methods": {}, "docstring": null, "code_smells": []}, {"id": 194, "name": "ModuleMetrics", "type": "class", "metrics": {"module": "treeline.models.core", "file": "/Users/oha/treeline/treeline/models/core.py", "line": 27, "methods": {}}, "methods": {}, "docstring": null, "code_smells": []}, {"id": 195, "name": "AnalysisRequest", "type": "class", "metrics": {"module": "treeline.api.app", "file": "/Users/oha/treeline/treeline/api/app.py", "line": 58, "methods": {}}, "methods": {}, "docstring": null, "code_smells": []}, {"id": 196, "name": "AnalysisResponse", "type": "class", "metrics": {"module": "treeline.api.app", "file": "/Users/oha/treeline/treeline/api/app.py", "line": 64, "methods": {}}, "methods": {}, "docstring": null, "code_smells": []}, {"id": 197, "name": "create_test_file", "type": "function", "metrics": {"module": "tests.test_checkers", "file": "/Users/oha/treeline/tests/test_checkers.py", "line": 21}, "code_smells": []}, {"id": 198, "name": "run_test", "type": "function", "metrics": {"module": "tests.test_checkers", "file": "/Users/oha/treeline/tests/test_checkers.py", "line": 27}, "code_smells": []}, {"id": 199, "name": "test_all_checkers", "type": "function", "metrics": {"module": "tests.test_checkers", "file": "/Users/oha/treeline/tests/test_checkers.py", "line": 79}, "code_smells": []}, {"id": 200, "name": "create_test_files", "type": "function", "metrics": {"module": "tests.test_integration", "file": "/Users/oha/treeline/tests/test_integration.py", "line": 17}, "code_smells": []}, {"id": 201, "name": "run_integration_test", "type": "function", "metrics": {"module": "tests.test_integration", "file": "/Users/oha/treeline/tests/test_integration.py", "line": 200}, "code_smells": []}, {"id": 202, "name": "simulate_visualization", "type": "function", "metrics": {"module": "tests.test_integration", "file": "/Users/oha/treeline/tests/test_integration.py", "line": 278}, "code_smells": []}, {"id": 203, "name": "calculate_area", "type": "function", "metrics": {"module": "tests.do_not_use.test_problematic_code", "file": "/Users/oha/treeline/tests/do_not_use/test_problematic_code.py", "line": 20}, "code_smells": []}, {"id": 204, "name": "calculate_timeout", "type": "function", "metrics": {"module": "tests.do_not_use.test_problematic_code", "file": "/Users/oha/treeline/tests/do_not_use/test_problematic_code.py", "line": 23}, "code_smells": []}, {"id": 205, "name": "set_default_batch_size", "type": "function", "metrics": {"module": "tests.do_not_use.test_problematic_code", "file": "/Users/oha/treeline/tests/do_not_use/test_problematic_code.py", "line": 27}, "code_smells": []}, {"id": 206, "name": "calculate_discount", "type": "function", "metrics": {"module": "tests.do_not_use.test_problematic_code", "file": "/Users/oha/treeline/tests/do_not_use/test_problematic_code.py", "line": 30}, "code_smells": []}, {"id": 207, "name": "get_database_connection", "type": "function", "metrics": {"module": "tests.do_not_use.test_problematic_code", "file": "/Users/oha/treeline/tests/do_not_use/test_problematic_code.py", "line": 41}, "code_smells": []}, {"id": 208, "name": "authenticate_user", "type": "function", "metrics": {"module": "tests.do_not_use.test_problematic_code", "file": "/Users/oha/treeline/tests/do_not_use/test_problematic_code.py", "line": 45}, "code_smells": []}, {"id": 209, "name": "unsafe_get_user", "type": "function", "metrics": {"module": "tests.do_not_use.test_problematic_code", "file": "/Users/oha/treeline/tests/do_not_use/test_problematic_code.py", "line": 53}, "code_smells": []}, {"id": 210, "name": "unsafe_search_orders", "type": "function", "metrics": {"module": "tests.do_not_use.test_problematic_code", "file": "/Users/oha/treeline/tests/do_not_use/test_problematic_code.py", "line": 58}, "code_smells": []}, {"id": 211, "name": "unsafe_update_status", "type": "function", "metrics": {"module": "tests.do_not_use.test_problematic_code", "file": "/Users/oha/treeline/tests/do_not_use/test_problematic_code.py", "line": 64}, "code_smells": []}, {"id": 212, "name": "process_data", "type": "function", "metrics": {"module": "tests.do_not_use.test_problematic_code", "file": "/Users/oha/treeline/tests/do_not_use/test_problematic_code.py", "line": 71}, "code_smells": []}, {"id": 213, "name": "create_user_profile", "type": "function", "metrics": {"module": "tests.do_not_use.test_problematic_code", "file": "/Users/oha/treeline/tests/do_not_use/test_problematic_code.py", "line": 122}, "code_smells": []}, {"id": 214, "name": "process_user_data", "type": "function", "metrics": {"module": "tests.do_not_use.test_problematic_code", "file": "/Users/oha/treeline/tests/do_not_use/test_problematic_code.py", "line": 154}, "code_smells": []}, {"id": 215, "name": "process_admin_login", "type": "function", "metrics": {"module": "tests.do_not_use.test_problematic_code", "file": "/Users/oha/treeline/tests/do_not_use/test_problematic_code.py", "line": 182}, "code_smells": []}, {"id": 216, "name": "log_system_access", "type": "function", "metrics": {"module": "tests.do_not_use.test_problematic_code", "file": "/Users/oha/treeline/tests/do_not_use/test_problematic_code.py", "line": 210}, "code_smells": []}, {"id": 217, "name": "send_notification", "type": "function", "metrics": {"module": "tests.do_not_use.test_problematic_code", "file": "/Users/oha/treeline/tests/do_not_use/test_problematic_code.py", "line": 240}, "code_smells": []}, {"id": 218, "name": "get_location_from_ip", "type": "function", "metrics": {"module": "tests.do_not_use.test_problematic_code", "file": "/Users/oha/treeline/tests/do_not_use/test_problematic_code.py", "line": 244}, "code_smells": []}, {"id": 219, "name": "example_function", "type": "function", "metrics": {"module": "tests.do_not_use.super_long_code", "file": "/Users/oha/treeline/tests/do_not_use/super_long_code.py", "line": 2}, "code_smells": []}, {"id": 220, "name": "long_function", "type": "function", "metrics": {"module": "tests.do_not_use.super_long_code", "file": "/Users/oha/treeline/tests/do_not_use/super_long_code.py", "line": 5}, "code_smells": []}, {"id": 221, "name": "create_default_ignore", "type": "function", "metrics": {"module": "treeline.core", "file": "/Users/oha/treeline/treeline/core.py", "line": 18}, "code_smells": []}, {"id": 222, "name": "format_structure", "type": "function", "metrics": {"module": "treeline.core", "file": "/Users/oha/treeline/treeline/core.py", "line": 38}, "code_smells": []}, {"id": 223, "name": "generate_tree", "type": "function", "metrics": {"module": "treeline.core", "file": "/Users/oha/treeline/treeline/core.py", "line": 101}, "code_smells": []}, {"id": 224, "name": "main", "type": "function", "metrics": {"module": "treeline.core", "file": "/Users/oha/treeline/treeline/core.py", "line": 161}, "code_smells": []}, {"id": 225, "name": "read_ignore_patterns", "type": "function", "metrics": {"module": "treeline.ignore", "file": "/Users/oha/treeline/treeline/ignore.py", "line": 6}, "code_smells": []}, {"id": 226, "name": "should_ignore", "type": "function", "metrics": {"module": "treeline.ignore", "file": "/Users/oha/treeline/treeline/ignore.py", "line": 17}, "code_smells": []}, {"id": 227, "name": "cli", "type": "function", "metrics": {"module": "treeline.cli", "file": "/Users/oha/treeline/treeline/cli.py", "line": 19}, "code_smells": []}, {"id": 228, "name": "snapshot", "type": "function", "metrics": {"module": "treeline.cli", "file": "/Users/oha/treeline/treeline/cli.py", "line": 25}, "code_smells": []}, {"id": 229, "name": "analyze", "type": "function", "metrics": {"module": "treeline.cli", "file": "/Users/oha/treeline/treeline/cli.py", "line": 33}, "code_smells": []}, {"id": 230, "name": "quality", "type": "function", "metrics": {"module": "treeline.cli", "file": "/Users/oha/treeline/treeline/cli.py", "line": 81}, "code_smells": []}, {"id": 231, "name": "serve", "type": "function", "metrics": {"module": "treeline.cli", "file": "/Users/oha/treeline/treeline/cli.py", "line": 132}, "code_smells": []}, {"id": 232, "name": "report", "type": "function", "metrics": {"module": "treeline.cli", "file": "/Users/oha/treeline/treeline/cli.py", "line": 153}, "code_smells": []}, {"id": 233, "name": "load_config", "type": "function", "metrics": {"module": "treeline.utils.config", "file": "/Users/oha/treeline/treeline/utils/config.py", "line": 28}, "code_smells": []}, {"id": 234, "name": "load_cache", "type": "function", "metrics": {"module": "treeline.api.app", "file": "/Users/oha/treeline/treeline/api/app.py", "line": 24}, "code_smells": []}, {"id": 235, "name": "save_cache", "type": "function", "metrics": {"module": "treeline.api.app", "file": "/Users/oha/treeline/treeline/api/app.py", "line": 43}, "code_smells": []}, {"id": 236, "name": "analyze_file_wrapper", "type": "function", "metrics": {"module": "treeline.api.app", "file": "/Users/oha/treeline/treeline/api/app.py", "line": 55}, "code_smells": []}, {"id": 237, "name": "is_safe_path", "type": "function", "metrics": {"module": "treeline.api.app", "file": "/Users/oha/treeline/treeline/api/app.py", "line": 256}, "code_smells": []}], "links": [{"source": 35, "target": 38, "type": "contains"}, {"source": 38, "target": 39, "type": "contains"}, {"source": 38, "target": 40, "type": "contains"}, {"source": 38, "target": 41, "type": "contains"}, {"source": 22, "target": 42, "type": "contains"}, {"source": 42, "target": 43, "type": "contains"}, {"source": 42, "target": 44, "type": "contains"}, {"source": 42, "target": 45, "type": "contains"}, {"source": 32, "target": 46, "type": "contains"}, {"source": 46, "target": 47, "type": "contains"}, {"source": 46, "target": 48, "type": "contains"}, {"source": 46, "target": 49, "type": "contains"}, {"source": 46, "target": 50, "type": "contains"}, {"source": 30, "target": 51, "type": "contains"}, {"source": 51, "target": 52, "type": "contains"}, {"source": 51, "target": 53, "type": "contains"}, {"source": 51, "target": 54, "type": "contains"}, {"source": 14, "target": 55, "type": "contains"}, {"source": 55, "target": 56, "type": "contains"}, {"source": 55, "target": 57, "type": "contains"}, {"source": 55, "target": 58, "type": "contains"}, {"source": 11, "target": 59, "type": "contains"}, {"source": 59, "target": 60, "type": "contains"}, {"source": 59, "target": 61, "type": "contains"}, {"source": 59, "target": 62, "type": "contains"}, {"source": 59, "target": 63, "type": "contains"}, {"source": 59, "target": 64, "type": "contains"}, {"source": 59, "target": 65, "type": "contains"}, {"source": 59, "target": 66, "type": "contains"}, {"source": 59, "target": 67, "type": "contains"}, {"source": 59, "target": 68, "type": "contains"}, {"source": 59, "target": 69, "type": "contains"}, {"source": 59, "target": 70, "type": "contains"}, {"source": 59, "target": 71, "type": "contains"}, {"source": 59, "target": 72, "type": "contains"}, {"source": 59, "target": 73, "type": "contains"}, {"source": 59, "target": 74, "type": "contains"}, {"source": 59, "target": 75, "type": "contains"}, {"source": 59, "target": 76, "type": "contains"}, {"source": 59, "target": 77, "type": "contains"}, {"source": 59, "target": 78, "type": "contains"}, {"source": 59, "target": 79, "type": "contains"}, {"source": 59, "target": 80, "type": "contains"}, {"source": 33, "target": 81, "type": "contains"}, {"source": 81, "target": 82, "type": "contains"}, {"source": 33, "target": 83, "type": "contains"}, {"source": 83, "target": 84, "type": "contains"}, {"source": 33, "target": 85, "type": "contains"}, {"source": 20, "target": 86, "type": "contains"}, {"source": 86, "target": 87, "type": "contains"}, {"source": 86, "target": 88, "type": "contains"}, {"source": 86, "target": 89, "type": "contains"}, {"source": 86, "target": 90, "type": "contains"}, {"source": 86, "target": 91, "type": "contains"}, {"source": 86, "target": 92, "type": "contains"}, {"source": 86, "target": 93, "type": "contains"}, {"source": 86, "target": 94, "type": "contains"}, {"source": 86, "target": 95, "type": "contains"}, {"source": 86, "target": 96, "type": "contains"}, {"source": 86, "target": 97, "type": "contains"}, {"source": 86, "target": 98, "type": "contains"}, {"source": 6, "target": 99, "type": "contains"}, {"source": 99, "target": 100, "type": "contains"}, {"source": 99, "target": 101, "type": "contains"}, {"source": 99, "target": 102, "type": "contains"}, {"source": 99, "target": 103, "type": "contains"}, {"source": 99, "target": 104, "type": "contains"}, {"source": 99, "target": 105, "type": "contains"}, {"source": 24, "target": 106, "type": "contains"}, {"source": 106, "target": 107, "type": "contains"}, {"source": 106, "target": 108, "type": "contains"}, {"source": 106, "target": 109, "type": "contains"}, {"source": 106, "target": 110, "type": "contains"}, {"source": 106, "target": 111, "type": "contains"}, {"source": 106, "target": 112, "type": "contains"}, {"source": 106, "target": 113, "type": "contains"}, {"source": 106, "target": 114, "type": "contains"}, {"source": 106, "target": 115, "type": "contains"}, {"source": 106, "target": 116, "type": "contains"}, {"source": 106, "target": 117, "type": "contains"}, {"source": 106, "target": 118, "type": "contains"}, {"source": 106, "target": 119, "type": "contains"}, {"source": 7, "target": 120, "type": "contains"}, {"source": 120, "target": 121, "type": "contains"}, {"source": 120, "target": 122, "type": "contains"}, {"source": 120, "target": 123, "type": "contains"}, {"source": 34, "target": 124, "type": "contains"}, {"source": 124, "target": 125, "type": "contains"}, {"source": 124, "target": 126, "type": "contains"}, {"source": 124, "target": 127, "type": "contains"}, {"source": 124, "target": 128, "type": "contains"}, {"source": 10, "target": 129, "type": "contains"}, {"source": 129, "target": 130, "type": "contains"}, {"source": 129, "target": 131, "type": "contains"}, {"source": 12, "target": 132, "type": "contains"}, {"source": 132, "target": 133, "type": "contains"}, {"source": 132, "target": 134, "type": "contains"}, {"source": 132, "target": 135, "type": "contains"}, {"source": 9, "target": 136, "type": "contains"}, {"source": 136, "target": 137, "type": "contains"}, {"source": 136, "target": 138, "type": "contains"}, {"source": 136, "target": 139, "type": "contains"}, {"source": 136, "target": 140, "type": "contains"}, {"source": 23, "target": 141, "type": "contains"}, {"source": 141, "target": 142, "type": "contains"}, {"source": 141, "target": 143, "type": "contains"}, {"source": 2, "target": 144, "type": "contains"}, {"source": 144, "target": 145, "type": "contains"}, {"source": 144, "target": 146, "type": "contains"}, {"source": 5, "target": 147, "type": "contains"}, {"source": 147, "target": 148, "type": "contains"}, {"source": 147, "target": 149, "type": "contains"}, {"source": 147, "target": 150, "type": "contains"}, {"source": 147, "target": 151, "type": "contains"}, {"source": 147, "target": 152, "type": "contains"}, {"source": 147, "target": 153, "type": "contains"}, {"source": 147, "target": 154, "type": "contains"}, {"source": 27, "target": 155, "type": "contains"}, {"source": 27, "target": 156, "type": "contains"}, {"source": 156, "target": 157, "type": "contains"}, {"source": 156, "target": 158, "type": "contains"}, {"source": 156, "target": 159, "type": "contains"}, {"source": 156, "target": 160, "type": "contains"}, {"source": 156, "target": 161, "type": "contains"}, {"source": 156, "target": 162, "type": "contains"}, {"source": 156, "target": 163, "type": "contains"}, {"source": 156, "target": 164, "type": "contains"}, {"source": 156, "target": 165, "type": "contains"}, {"source": 18, "target": 166, "type": "contains"}, {"source": 166, "target": 167, "type": "contains"}, {"source": 166, "target": 168, "type": "contains"}, {"source": 166, "target": 169, "type": "contains"}, {"source": 166, "target": 170, "type": "contains"}, {"source": 166, "target": 171, "type": "contains"}, {"source": 36, "target": 172, "type": "contains"}, {"source": 36, "target": 173, "type": "contains"}, {"source": 36, "target": 174, "type": "contains"}, {"source": 36, "target": 175, "type": "contains"}, {"source": 36, "target": 176, "type": "contains"}, {"source": 36, "target": 177, "type": "contains"}, {"source": 36, "target": 178, "type": "contains"}, {"source": 36, "target": 179, "type": "contains"}, {"source": 179, "target": 180, "type": "contains"}, {"source": 36, "target": 181, "type": "contains"}, {"source": 36, "target": 182, "type": "contains"}, {"source": 4, "target": 183, "type": "contains"}, {"source": 4, "target": 184, "type": "contains"}, {"source": 4, "target": 185, "type": "contains"}, {"source": 4, "target": 186, "type": "contains"}, {"source": 4, "target": 187, "type": "contains"}, {"source": 8, "target": 188, "type": "contains"}, {"source": 8, "target": 189, "type": "contains"}, {"source": 8, "target": 190, "type": "contains"}, {"source": 8, "target": 191, "type": "contains"}, {"source": 25, "target": 192, "type": "contains"}, {"source": 25, "target": 193, "type": "contains"}, {"source": 25, "target": 194, "type": "contains"}, {"source": 28, "target": 195, "type": "contains"}, {"source": 28, "target": 196, "type": "contains"}, {"source": 15, "target": 197, "type": "contains"}, {"source": 15, "target": 198, "type": "contains"}, {"source": 15, "target": 199, "type": "contains"}, {"source": 1, "target": 200, "type": "contains"}, {"source": 1, "target": 201, "type": "contains"}, {"source": 1, "target": 202, "type": "contains"}, {"source": 11, "target": 203, "type": "contains"}, {"source": 11, "target": 204, "type": "contains"}, {"source": 11, "target": 205, "type": "contains"}, {"source": 11, "target": 206, "type": "contains"}, {"source": 11, "target": 207, "type": "contains"}, {"source": 11, "target": 208, "type": "contains"}, {"source": 11, "target": 209, "type": "contains"}, {"source": 11, "target": 210, "type": "contains"}, {"source": 11, "target": 211, "type": "contains"}, {"source": 11, "target": 212, "type": "contains"}, {"source": 11, "target": 213, "type": "contains"}, {"source": 11, "target": 214, "type": "contains"}, {"source": 11, "target": 215, "type": "contains"}, {"source": 11, "target": 216, "type": "contains"}, {"source": 11, "target": 217, "type": "contains"}, {"source": 11, "target": 218, "type": "contains"}, {"source": 3, "target": 219, "type": "contains"}, {"source": 3, "target": 220, "type": "contains"}, {"source": 16, "target": 221, "type": "contains"}, {"source": 16, "target": 222, "type": "contains"}, {"source": 16, "target": 223, "type": "contains"}, {"source": 16, "target": 224, "type": "contains"}, {"source": 21, "target": 225, "type": "contains"}, {"source": 21, "target": 226, "type": "contains"}, {"source": 29, "target": 227, "type": "contains"}, {"source": 29, "target": 228, "type": "contains"}, {"source": 29, "target": 229, "type": "contains"}, {"source": 29, "target": 230, "type": "contains"}, {"source": 29, "target": 231, "type": "contains"}, {"source": 29, "target": 232, "type": "contains"}, {"source": 37, "target": 233, "type": "contains"}, {"source": 28, "target": 234, "type": "contains"}, {"source": 28, "target": 235, "type": "contains"}, {"source": 28, "target": 236, "type": "contains"}, {"source": 28, "target": 237, "type": "contains"}, {"source": 198, "target": 197, "type": "calls"}, {"source": 199, "target": 198, "type": "calls"}, {"source": 199, "target": 198, "type": "calls"}, {"source": 199, "target": 198, "type": "calls"}, {"source": 199, "target": 198, "type": "calls"}, {"source": 199, "target": 198, "type": "calls"}, {"source": 199, "target": 198, "type": "calls"}, {"source": 201, "target": 200, "type": "calls"}, {"source": 214, "target": 217, "type": "calls"}, {"source": 215, "target": 217, "type": "calls"}, {"source": 216, "target": 217, "type": "calls"}, {"source": 214, "target": 218, "type": "calls"}, {"source": 215, "target": 218, "type": "calls"}, {"source": 216, "target": 218, "type": "calls"}, {"source": 223, "target": 225, "type": "calls"}, {"source": 223, "target": 226, "type": "calls"}, {"source": 224, "target": 221, "type": "calls"}, {"source": 35, "target": 16, "type": "imports"}, {"source": 22, "target": 16, "type": "imports"}, {"source": 32, "target": 16, "type": "imports"}, {"source": 15, "target": 9, "type": "imports"}, {"source": 15, "target": 10, "type": "imports"}, {"source": 15, "target": 12, "type": "imports"}, {"source": 15, "target": 2, "type": "imports"}, {"source": 15, "target": 34, "type": "imports"}, {"source": 15, "target": 7, "type": "imports"}, {"source": 1, "target": 20, "type": "imports"}, {"source": 1, "target": 24, "type": "imports"}, {"source": 14, "target": 16, "type": "imports"}, {"source": 20, "target": 21, "type": "imports"}, {"source": 20, "target": 36, "type": "imports"}, {"source": 6, "target": 33, "type": "imports"}, {"source": 6, "target": 4, "type": "imports"}, {"source": 24, "target": 9, "type": "imports"}, {"source": 24, "target": 10, "type": "imports"}, {"source": 24, "target": 12, "type": "imports"}, {"source": 24, "target": 2, "type": "imports"}, {"source": 24, "target": 8, "type": "imports"}, {"source": 24, "target": 34, "type": "imports"}, {"source": 24, "target": 23, "type": "imports"}, {"source": 24, "target": 7, "type": "imports"}, {"source": 16, "target": 24, "type": "imports"}, {"source": 16, "target": 33, "type": "imports"}, {"source": 16, "target": 20, "type": "imports"}, {"source": 16, "target": 21, "type": "imports"}, {"source": 16, "target": 25, "type": "imports"}, {"source": 29, "target": 28, "type": "imports"}, {"source": 29, "target": 18, "type": "imports"}, {"source": 29, "target": 20, "type": "imports"}, {"source": 29, "target": 24, "type": "imports"}, {"source": 29, "target": 27, "type": "imports"}, {"source": 19, "target": 16, "type": "imports"}, {"source": 34, "target": 8, "type": "imports"}, {"source": 10, "target": 8, "type": "imports"}, {"source": 12, "target": 8, "type": "imports"}, {"source": 9, "target": 8, "type": "imports"}, {"source": 23, "target": 8, "type": "imports"}, {"source": 18, "target": 20, "type": "imports"}, {"source": 18, "target": 24, "type": "imports"}, {"source": 4, "target": 33, "type": "imports"}, {"source": 8, "target": 33, "type": "imports"}, {"source": 25, "target": 33, "type": "imports"}, {"source": 28, "target": 18, "type": "imports"}, {"source": 28, "target": 20, "type": "imports"}, {"source": 28, "target": 24, "type": "imports"}]}